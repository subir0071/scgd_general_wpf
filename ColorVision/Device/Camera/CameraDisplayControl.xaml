<UserControl x:Class="ColorVision.Device.Camera.CameraDisplayControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Device.Camera"
             xmlns:ScottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
             xmlns:Template ="clr-namespace:ColorVision.Template"
             xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             xmlns:SettingUp ="clr-namespace:ColorVision.SettingUp"
             xmlns:converter="clr-namespace:ColorVision.Converter"
             xmlns:cv="clr-namespace:ColorVision"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:CameraService}"
             d:DesignHeight="800" d:DesignWidth="300" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
    </UserControl.Resources>
    <StackPanel x:Name="StackPanelCamera"  Margin="0,5">
        <DockPanel>
            <ToggleButton  x:Name="ToggleButton1"  Style="{StaticResource ButtonPageControl1}" Content="{Binding Config.Name}"  FontSize="15"  IsChecked="True" />
            <TextBlock  FontSize="10" VerticalAlignment="Bottom" Margin="2" Style="{DynamicResource TextBlock1}">
                <Run Text="("/>
                <Run Text="{Binding Config.Code}"/>
                <Run Text=","/>
                <Run Text="{Binding Config.CameraType}"/>
                <Run Text=","/>
                <Run Text="{Binding Config.Channel}"/>
                <Run Text=")"/>
            </TextBlock>
        </DockPanel>
        <Border Style="{DynamicResource BorderModuleArea}"  IsEnabled="{Binding IsAlive}"  Visibility="{Binding ElementName=ToggleButton1,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
            <StackPanel Margin="5">
                <Button  x:Name="CamerInitButton" Content="连接" Click="MQTTCamera_Init_Click"/>
              
                <StackPanel x:Name="StackPanelOpen" Margin="5">
                    <DockPanel Margin="2" >
                        <Label Content="取图模式："/>
                        <ComboBox  x:Name="ComboxCameraTakeImageMode"  Style="{StaticResource ComboBox.Small}"  SelectedValuePath="Key"  DisplayMemberPath="Value"  Margin="0,0,10,0"/>
                    </DockPanel>
                    <Button x:Name="CameraVideoSetButton" Visibility="Collapsed" Content="视频模式配置" Click="VideSetting_Click"/>
                    <Button x:Name="CameraOpenButton" Content="打开" Click="Open_Click" />
                    <StackPanel x:Name="StackPanelImage">
                        <DockPanel Margin="0,2">
                            <TextBlock  Text="增益" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="0,0,5,0" />
                            <TextBox DockPanel.Dock="Right" Text="{Binding ElementName=SliderGain,Path=Value}"  Width="50"/>
                            <hc:PreviewSlider x:Name="SliderGain"  TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="{Binding Config.Gain}" Maximum="100">
                                <hc:PreviewSlider.PreviewContent>
                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0"/>
                                </hc:PreviewSlider.PreviewContent>
                            </hc:PreviewSlider>
                        </DockPanel>
                        <StackPanel Visibility="{Binding Config.IsExpThree,Converter={StaticResource bool2VisibilityConverter1}}">
                            <DockPanel Margin="0,2">
                                <TextBlock  Text="曝光" VerticalAlignment="Center"   HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTime}"  Width="50"/>
                                <hc:PreviewSlider x:Name="SliderexpTime"  TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="{Binding Config.ExpTime}" Maximum="6000">
                                    <hc:PreviewSlider.PreviewContent>
                                        <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0."/>
                                    </hc:PreviewSlider.PreviewContent>
                                </hc:PreviewSlider>
                            </DockPanel>
                        </StackPanel>
                        <StackPanel Visibility="{Binding Config.IsExpThree,Converter={StaticResource bool2VisibilityConverter}}">
                            <DockPanel Margin="0,2">
                                <TextBlock  Text="曝光R" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeR}"  Width="50"/>
                                <hc:PreviewSlider  TickFrequency ="1" IsSnapToTickEnabled="True"  SmallChange ="1" LargeChange="100"  Value="{Binding Config.ExpTimeR}" Maximum="6000">
                                    <hc:PreviewSlider.PreviewContent>
                                        <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0."/>
                                    </hc:PreviewSlider.PreviewContent>
                                </hc:PreviewSlider>
                            </DockPanel>
                            <DockPanel Margin="0,2">
                                <TextBlock  Text="曝光G" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeG}"  Width="50"/>
                                <hc:PreviewSlider  TickFrequency ="1" IsSnapToTickEnabled="True"  SmallChange ="1" LargeChange="100"  Value="{Binding Config.ExpTimeG}" Maximum="6000">
                                    <hc:PreviewSlider.PreviewContent>
                                        <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0."/>
                                    </hc:PreviewSlider.PreviewContent>
                                </hc:PreviewSlider>
                            </DockPanel>
                            <DockPanel Margin="0,2">
                                <TextBlock  Text="曝光B" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                <TextBox DockPanel.Dock="Right" Text="{Binding Config.ExpTimeB}"  Width="50"/>
                                <hc:PreviewSlider  TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="100"  Value="{Binding Config.ExpTimeB}" Maximum="6000">
                                    <hc:PreviewSlider.PreviewContent>
                                        <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0."/>
                                    </hc:PreviewSlider.PreviewContent>
                                </hc:PreviewSlider>
                            </DockPanel>
                        </StackPanel>
                        <UniformGrid Columns="2" Margin="0,2">
                            <Button Content="自动曝光" Click="AutoExplose_Click" Margin="10,0" />
                            <Button Content="自动聚焦" Click="AutoFocus_Click" Margin="10,0" />
                        </UniformGrid>

                        <Button Content="取图" Click="SendDemo3_Click" Margin="0,2"/>
                    </StackPanel>
                    <StackPanel  x:Name="StackPanelFilterWheel" Initialized="StackPanelFilterWheel_Initialized" Visibility="Collapsed">
                        <GroupBox Header="滤色轮">
                            <StackPanel >
                                <ComboBox x:Name="ComboxFilterWheelChannel"  Style="{StaticResource ComboBox.Small}"  Margin="0,2,10,2"/>
                                <Button Content="切换通道" Margin="2" Click="FilterWheelSetPort_Click"/>
                                <Button Content="重置" Margin="2" Click="FilterWheelReset_Click" ToolTip="重置滤色轮"/>
                                <UniformGrid>
                                    <DockPanel>
                                        <Label Content="Index:"/>
                                        <ComboBox x:Name="ComboxFilterWheelChannel1"  Style="{StaticResource ComboBox.Small}"  SelectedIndex="0" Margin="0,2,10,2">
                                            <ComboBoxItem Content="1"/>
                                            <ComboBoxItem Content="2"/>
                                            <ComboBoxItem Content="3"/>
                                            <ComboBoxItem Content="4"/>
                                            <ComboBoxItem Content="5"/>
                                            <ComboBoxItem Content="6"/>
                                            <ComboBoxItem Content="7"/>
                                            <ComboBoxItem Content="8"/>
                                            <ComboBoxItem Content="9"/>
                                        </ComboBox>
                                    </DockPanel>
                                    <DockPanel>
                                        <Label Content="通道:"/>
                                        <ComboBox x:Name="ComboxFilterWheelChannel2"  Style="{StaticResource ComboBox.Small}"  SelectedIndex="0" Margin="0,2,10,2">
                                            <ComboBoxItem Content="1"/>
                                            <ComboBoxItem Content="2"/>
                                            <ComboBoxItem Content="3"/>
                                            <ComboBoxItem Content="4"/>
                                            <ComboBoxItem Content="5"/>
                                            <ComboBoxItem Content="6"/>
                                            <ComboBoxItem Content="7"/>
                                            <ComboBoxItem Content="8"/>
                                            <ComboBoxItem Content="9"/>
                                        </ComboBox>
                                    </DockPanel>
                                    <Button Content="设置"   Margin="2" Click="FilterWheelSet_Click" ToolTip="根据通道设置滤色轮"/>
                                </UniformGrid>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                    <UniformGrid Columns="2">
                        <Button Content="打开测试图像"   Click="Button_Click"/>
                        <Button Content="打开二进制测试图像" Click="ButtonCV_Click"/>
                        <Button Content="FSR" Click="FSR_Click"/>
                        <Button Content="FOV" Click="FOV_Click"/>
                        <Button Content="鬼影" Click="GhostShadow_Click"/>
                    </UniformGrid>

                    <GroupBox Header="关注点" Margin="0,5">
                        <StackPanel>
                            <DockPanel Margin="0,2">
                                <TextBlock Text="关注点模板：" VerticalAlignment="Center" Width="100"/>
                                <ComboBox  x:Name="ComboxPoiTemplate"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Value"  DisplayMemberPath="Key" />
                            </DockPanel>
                            <DockPanel Margin="0,2">
                                <Button  Content="应用"  HorizontalAlignment="Right" Click="PoiClick" />
                            </DockPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="校正" Margin="0,5">
                        <StackPanel>
                            <DockPanel Margin="0,2">
                                <TextBlock Text="校正模板：" VerticalAlignment="Center" Width="80"/>
                                <CheckBox x:Name="CheckBoxCalibration" DockPanel.Dock="Right"  Margin="5,0"  />
                                <ComboBox  x:Name="ComboxCalibrationTemplate"  Style="{StaticResource ComboBox.Small}"  SelectionChanged="ComboxCalibrationTemplate_SelectionChanged" SelectedValuePath="Value"  DisplayMemberPath="Key" />
                            </DockPanel>
                            <DockPanel Margin="0,2">
                                <Button  Content="应用"  HorizontalAlignment="Right" Click="Calibration_Click" />
                            </DockPanel>
                            <Template:Calibration x:Name="Calibration1"  Visibility="{Binding ElementName=CheckBoxCalibration,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}"  />
                        </StackPanel>
                    </GroupBox>



                    <DockPanel Margin="5,2" >
                        <TextBlock Text="输出视图：" VerticalAlignment="Center" Width="100"/>
                        <ComboBox x:Name="ComboxView"  Style="{StaticResource ComboBox.Small}"  SelectedValuePath="Value" DisplayMemberPath="Key"   />
                    </DockPanel>

                </StackPanel>


            </StackPanel>
        </Border>
    </StackPanel>

</UserControl>
