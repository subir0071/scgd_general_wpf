<UserControl x:Class="ColorVision.Services.ServiceTerminalControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Services"
             xmlns:mqtt="clr-namespace:ColorVision.MQTT"
             xmlns:resx="clr-namespace:ColorVision.Properties"
             xmlns:hc ="https://handyorg.github.io/handycontrol"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:ServiceTerminal}"
             d:DesignHeight="500" d:DesignWidth="600" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="ToolTip" Value="{ Binding Text,RelativeSource={RelativeSource Self}}"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Margin="0,0,0,5">
            <Grid  x:Name="MQTTShowContent" Grid.Row="0" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Margin="2" Background ="{DynamicResource GlobalBackground}" CornerRadius="5">
                    <StackPanel Margin="5">
                        <DockPanel Margin="5,2">
                            <ToggleButton DockPanel.Dock="Right"  Style="{StaticResource ButtonMQTTConnect}"  Height="20" Width="20"  HorizontalAlignment="Right" IsChecked="{Binding  Config.IsAlive,Mode=OneWay}" IsEnabled="False" />
                            <Grid  Height="18"   HorizontalAlignment="Left"  Margin="0,0,4,0">
                                <Image Source="{Binding Icon}"/>
                            </Grid>
                            <TextBlock Text="{Binding Config.Name}" FontWeight="Bold" FontSize="20"/>
                        </DockPanel>
                        <GroupBox Header="基本信息" Margin="0,5">
                            <StackPanel Margin="5">
                                <DockPanel Margin="0,2">
                                    <TextBlock Text="服务代码:" Width="120"/>
                                    <TextBox IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding SysResourceModel.Code}"/>
                                </DockPanel>
                                <DockPanel Margin="0,2">
                                    <TextBlock Text="发送信道:" Width="120"/>
                                    <TextBox IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding Config.SendTopic}"/>
                                </DockPanel>
                                <DockPanel Margin="0,2">
                                    <TextBlock Text="接收信道:" Width="120"/>
                                    <TextBox IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding Config.SubscribeTopic}"/>
                                </DockPanel>
                                <DockPanel Margin="0,2">
                                    <TextBlock Text="上次连接:" Width="120"/>
                                    <TextBox x:Name="textBox" IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding Config.LastAliveTime}" MouseDoubleClick="TextBox_MouseDoubleClick"/>
                                    <Popup Name="popup" PlacementTarget="{Binding ElementName=textBox}" LostFocus="popup_LostFocus"  Placement="Bottom" Width="200"  Height="100">
                                        <local:HeartbeatHistory/>
                                    </Popup>

                                </DockPanel>
                                <DockPanel Margin="0,2">
                                    <TextBlock Text="心跳:" Width="120"/>
                                    <TextBox IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding Config.HeartbeatTime}"/>
                                </DockPanel>
                                <DockPanel Margin="0,2" >
                                    <TextBlock Text="ServiceToken"  Width="120"/>
                                    <TextBox IsReadOnly="True" Style="{StaticResource TextBox.Small}" BorderThickness="0"  Text="{Binding Config.ServiceToken}"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>

                    </StackPanel>

                </Border>
                <StackPanel  Grid.Column="1" >
                    <UniformGrid Columns="1">
                        <Button  Click="Button_Click_1" Margin="2">
                            <Image Source="{StaticResource DrawingImageDelete}" Height="30"/>
                        </Button>
                        <Button  Grid.Column="2" Click="Button_Click_2"  VerticalAlignment="Stretch" Margin="2" >
                            <TextBlock Text="+"  FontFamily="Consolas"  TextWrapping="Wrap"   FontSize="25"/>
                        </Button>
                        <Button  Grid.Column="2"  Click="ReFresh_Click" Command="{Binding RefreshCommand}"  VerticalAlignment="Stretch" Margin="2" >
                            <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets"   Foreground="{DynamicResource GlobalTextBrush}"  FontSize="15" />
                        </Button>
                    </UniformGrid>
                </StackPanel>
            </Grid>
            
            <Grid  x:Name="MQTTEditContent" Visibility="Collapsed" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <StackPanel >
                    <DockPanel Margin="5" >
                        <TextBlock Text="服务名称" Width="120"/>
                        <TextBox Text="{Binding Name}"/>
                    </DockPanel>
                    <DockPanel Margin="5" >
                        <TextBlock Text="服务Code" Width="120"/>
                        <TextBox Text="{Binding SysResourceModel.Code}"/>
                    </DockPanel>
                    <DockPanel Margin="5">
                        <TextBlock Text="心跳:" Width="120"/>
                        <TextBox Text="{Binding Config.HeartbeatTime}"/>
                    </DockPanel>
                </StackPanel>
                <Button Grid.Column="1"  Content="{x:Static resx:Resource.Submit}" Click="Button_Click" Command="{Binding SaveCommand}" />
            </Grid>

        </Grid>
        <GroupBox x:Name="MQTTCreate" Header="配置设备" Grid.Row="2" Visibility="Collapsed">
            <StackPanel x:Name="MQTTCreateStackPanel"  Grid.Column="1" Grid.Row="1" Margin="5">
                <DockPanel Margin="5" Visibility="Collapsed" >
                    <TextBlock Text="类型" Width="60"/>
                    <ComboBox x:Name="TextBox_Type" SelectedValuePath="Name"  DisplayMemberPath="Name" />
                </DockPanel>
                <DockPanel Margin="5" >
                    <TextBlock Text="标识" Width="60"/>
                    <hc:ComboBox  x:Name="TextBox_Code" IsEditable="True" SelectedIndex="0" Text=""  hc:InfoElement.ShowClearButton="True" Margin="0,0,10,0"  />
                </DockPanel>
                <DockPanel Margin="5" >
                    <TextBlock Text="名称" Width="60"/>
                    <hc:ComboBox  x:Name="TextBox_Name" IsEditable="True" SelectedIndex="0" Text=""  hc:InfoElement.ShowClearButton="True" Margin="0,0,10,0"  />
                </DockPanel>
                <Button   Click="Button_New_Click" Content="添加" />
            </StackPanel>
        </GroupBox>

        <ListView  x:Name="ListViewService" SelectionChanged="ListViewService_SelectionChanged" Grid.Row="1">
            <ListView.Resources >
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle}">
                    <Setter Property="ContextMenu" Value="{Binding ContextMenu}"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View >
                <GridView>
                    <GridViewColumn  Header="设备名称">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate  DataType="{x:Type mqtt:BaseChannel}">
                                <TextBlock Text="{ Binding Name}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="是否存活">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate  DataType="{x:Type mqtt:BaseChannel}">
                                <TextBlock Text="{ Binding  IsAlive}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
