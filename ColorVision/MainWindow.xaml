<Window x:Class="ColorVision.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorVision"
        xmlns:effects="http://gu.se/Geometry"
        xmlns:ScottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
        xmlns:Template ="clr-namespace:ColorVision.Template"
        xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:mqtt ="clr-namespace:ColorVision.MQTT"
        xmlns:SettingUp ="clr-namespace:ColorVision.SettingUp"
        xmlns:converter="clr-namespace:ColorVision.Converter"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}"
        Title="ColorVision" Height="720" Width="1280"  Initialized="Window_Initialized">
    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Menu x:Name="Menu1" Height ="24" Background="#F3F3F3"  Initialized="Menu_Initialized">
                <MenuItem x:Name="FileMenuItem" Header="文件(_F)">
                    <MenuItem Header="新建(_O)" Click="MenuItem_ProjectNew_Click" InputGestureText="Ctrl + O">
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE8F4;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="打开(_O)" Click="MenuItem_ProjectOpen_Click" InputGestureText="Ctrl + N">
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE8E5;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="退出(_X)" InputGestureText="Alt + F4" Click="MenuItem_Exit"/>
                </MenuItem>
                <MenuItem Header="模板(_M)">
                    <MenuItem Header="流程引擎模板(_F)" Tag="FlowParam"  Click="MenuItem_Template"/>
                    <MenuItem Header="关注点模板设置(_P)" Tag="FocusParm" Click="MenuItem_Template"/>
                    <Separator/>
                    <MenuItem Header="_AOI参数模板设置" Tag="AoiParam" Click="MenuItem_Template"/>
                    <MenuItem Header="校正模板设置(_C)" Tag="Calibration"  Click="MenuItem_Template"/>
                    <MenuItem Header="_PG通讯模板设置" Tag="PGParam"  Click="MenuItem_Template"/>
                    <MenuItem Header="数据判断模板设置(_J)" Tag="LedReusltParams"  Click="MenuItem_Template"/>
                    <MenuItem Header="源表模板设置(_V)"  Tag="SxParms" Click="MenuItem_Template"/>
                </MenuItem>
                <MenuItem  x:Name="MenuStatusBar"  d:DataContext="{d:DesignInstance SettingUp:SoftwareConfig}"  Header="视图(_V)">
                    <MenuItem Header="侧边栏(_M)"  IsChecked="{Binding IsOpenSidebar}"  Click="MenuStatusBar_Click"/>
                    <MenuItem Header="状态栏(_S)" IsChecked="{Binding IsOpenStatusBar}"  Click="MenuStatusBar_Click" />
                </MenuItem>
                <MenuItem Header="工具(_T)">
                    <MenuItem Header="流程引擎(_F)" Click="MenuItem9_Click"/>
                    <MenuItem Header="MQTT日志(_Q)" Click="MenuItem_Click"/>
                    <Separator/>
                    <MenuItem Header="设置(_O)"  Click="MenuItem_Click_2"   InputGestureText="Ctrl + I"  >
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE713;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="标定(_A)">
                    <MenuItem Header="四色校正" Click="MenuItem_Click8"/>
                </MenuItem>
                
                <MenuItem Header="帮助(_H)">
                    <MenuItem Header="打开日志(_L)"  Click="Log_Click"/>
                    <Separator/>
                    <MenuItem Header="检查更新(_U)" Click="Update_Click"/>
                    <MenuItem Header="我的许可证(_R)"  Click="License_Click"/>
                    <MenuItem Header="关于(_A)" Click="About_Click"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid x:Name="ContentGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid  Grid.Row="0" Background="#F9F9F9" Width="300" x:Name="SiderBarGrid" d:DataContext="{d:DesignInstance SettingUp:SoftwareConfig}" Visibility="{Binding IsOpenSidebar,Converter={StaticResource bool2VisibilityConverter}}" >
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel >

                        <StackPanel Margin="0,5" x:Name="StackPanelPG" Initialized="StackPanelPG_Initialized">
                            <ToggleButton  x:Name="ToggleButton0"  Style="{StaticResource ButtonPageControl1}"  Background="#F9F9F9"  Content="PG"  FontSize="15" Foreground="Black" IsChecked="False" />
                            <Border  Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton0,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <Label Content="模板："/>
                                        <ComboBox  x:Name="ComboxPGTemplate"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,0,10,0"/>
                                    </DockPanel>
                                    <Template:PG x:Name="PG1" />
                                    <GroupBox Header="MQTT Test">
                                        <StackPanel Visibility="Visible" >
                                            <UniformGrid>
                                                <ComboBox  x:Name="ComboxPGType"   SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,2,10,2"/>
                                                <ComboBox  x:Name="ComboxPGCommunicateType"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,2,10,2"/>
                                                <Button Margin="2" Content="InitPG"  Click="PGInit"/>
                                                <Button Margin="2"  Content="UnInitPG" Click="PGUnInit"/>
                                            </UniformGrid>
                                            <UniformGrid>
                                                <DockPanel Margin="2">
                                                    <TextBlock  x:Name="TextBlockPGIP"   Text="IP:"/>
                                                    <TextBox  x:Name="TextBoxPGIP" Height="16" BorderThickness="0,0,0,1"/>
                                                </DockPanel>
                                                <DockPanel Margin="2"  >
                                                    <TextBlock  x:Name="TextBlockPGPort"  Text="Port:"/>
                                                    <TextBox  x:Name="TextBoxPGPort" Height="16" BorderThickness="0,0,0,1"/>
                                                </DockPanel>
                                                <Button Margin="2"  Content="打开PG" Click="PGOpen"/>
                                                <Button Margin="2" Content="关闭PG" Click="PGClose"/>
                                            </UniformGrid>
                                            <UniformGrid Columns="2">
                                                <Button Margin="2"  Content="Start" Click="PGStartPG"/>
                                                <Button Margin="2"  Content="Stop" Click="PGStopPG"/>
                                                <Button Margin="2" Content="ReSet" Click="PGReSetPG"/>
                                                <Grid/>
                                                <Button Margin="2"  Content="SwitchUp" Click="PGSwitchUpPG"/>
                                                <Button  Margin="2" Content="SwitchDown" Click="PGSwitchDownPG"/>
                                                <TextBox VerticalContentAlignment="Center"  BorderThickness="0,0,0,1" Margin="0,3" x:Name="PGFrameText" Text="0"/>
                                                <Button  Margin="2" Content="SwitchFrame" Click="PGSwitchFramePG"/>
                                            </UniformGrid>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <StackPanel x:Name="StackPanelCamera" Margin="0,5"   Initialized="StackPanelCamera_Initialized">
                            <ToggleButton  x:Name="ToggleButton1"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9" Content="相机设置"  FontSize="15" Foreground="Black" IsChecked="True" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton1,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <Label Content="相机类型："/>
                                        <ComboBox  x:Name="ComboxCameraType"  SelectedValuePath="Key"  DisplayMemberPath="Value"  Height="20" Margin="0,0,10,0"/>
                                    </DockPanel>
                                    <Button  x:Name="CamerInitButton" Content="初始化" Click="MQTTCamera_Init_Click"/>
                                    <StackPanel x:Name="StackPanelOpen">
                                        <UniformGrid Columns="2">
                                            <DockPanel >
                                                <Label Content="相机ID："/>
                                                <ComboBox  x:Name="ComboxCameraID" Height="20" Margin="0,0,10,0"/>
                                            </DockPanel>

                                            <DockPanel  >
                                                <Label Content="通道数："/>
                                                <ComboBox  x:Name="ComboxCameraChannel" SelectedIndex="1" Height="20" Margin="0,0,10,0">
                                                    <ComboBoxItem Content="1"/>
                                                    <ComboBoxItem Content="3"/>
                                                </ComboBox>
                                            </DockPanel>

                                            <DockPanel >
                                                <Label Content="取图模式："/>
                                                <ComboBox  x:Name="ComboxCameraTakeImageMode" SelectedValuePath="Key"  DisplayMemberPath="Value"  Height="20" Margin="0,0,10,0"/>
                                            </DockPanel>
                                            <DockPanel  >
                                                <Label Content="取图模式："/>
                                                <ComboBox  x:Name="ComboxCameraImageBpp" SelectedIndex="0" Height="20" Margin="0,0,10,0" >
                                                    <ComboBoxItem Content="8"/>
                                                    <ComboBoxItem Content="16"/>
                                                </ComboBox>
                                            </DockPanel>
                                        </UniformGrid>
                                        <Grid>
                                            <Button x:Name="CameraOpenButton" Content="打开相机" Click="SendDemo2_Click" />
                                            <Button x:Name="CameraCloseButton"  Content="关闭相机" Click="SendDemo4_Click" />
                                        </Grid>

                                    </StackPanel>

                                    <StackPanel x:Name="StackPanelImage">
                                        <DockPanel>
                                            <TextBlock  Text="增益" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="0,0,5,0" />
                                            <Slider x:Name="SliderGain" Template="{ StaticResource LM_SliderControlTemplate2}" TickFrequency ="0.1" IsSnapToTickEnabled="True"  SmallChange ="0.1" Value="1" Maximum="10"  />
                                        </DockPanel>
                                        <DockPanel>
                                            <TextBlock  Text="曝光" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                            <Slider x:Name="SliderexpTime"  Template="{ StaticResource LM_SliderControlTemplate2}" TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="100" Maximum="6000"/>
                                        </DockPanel>
                                        <Button Content="取图" Click="SendDemo3_Click"/>
                                        <DockPanel>
                                            <Button Content="存图" Click="SendDemo3_Click" Width="80"/>
                                            <TextBox x:Name="TextFilePath" BorderThickness="0,0,0,1"  Margin="5"/>
                                        </DockPanel>
                                    </StackPanel>
                                    <StackPanel  x:Name="StackPanelFilterWheel" Initialized="StackPanelFilterWheel_Initialized">
                                        <GroupBox Header="滤色轮">
                                            <StackPanel >
                                                <ComboBox x:Name="ComboxFilterWheelChannel" Height="20" Margin="0,2,10,2"/>
                                                <Button Content="切换通道" Margin="2" Click="FilterWheelSetPort_Click"/>
                                                <Button Content="重置" Margin="2" Click="FilterWheelReset_Click" ToolTip="重置滤色轮"/>
                                                <UniformGrid>
                                                    <DockPanel>
                                                        <Label Content="Index:"/>
                                                        <ComboBox x:Name="ComboxFilterWheelChannel1" SelectedIndex="0" Height="20" Margin="0,2,10,2">
                                                            <ComboBoxItem Content="1"/>
                                                            <ComboBoxItem Content="2"/>
                                                            <ComboBoxItem Content="3"/>
                                                            <ComboBoxItem Content="4"/>
                                                            <ComboBoxItem Content="5"/>
                                                            <ComboBoxItem Content="6"/>
                                                            <ComboBoxItem Content="7"/>
                                                            <ComboBoxItem Content="8"/>
                                                            <ComboBoxItem Content="9"/>
                                                        </ComboBox>
                                                    </DockPanel>
                                                    <DockPanel>
                                                        <Label Content="通道:"/>
                                                        <ComboBox x:Name="ComboxFilterWheelChannel2" SelectedIndex="0" Height="20" Margin="0,2,10,2">
                                                            <ComboBoxItem Content="1"/>
                                                            <ComboBoxItem Content="2"/>
                                                            <ComboBoxItem Content="3"/>
                                                            <ComboBoxItem Content="4"/>
                                                            <ComboBoxItem Content="5"/>
                                                            <ComboBoxItem Content="6"/>
                                                            <ComboBoxItem Content="7"/>
                                                            <ComboBoxItem Content="8"/>
                                                            <ComboBoxItem Content="9"/>
                                                        </ComboBox>
                                                    </DockPanel>
                                                    <Button Content="设置"   Margin="2" Click="FilterWheelSet_Click" ToolTip="根据通道设置滤色轮"/>
                                                </UniformGrid>
                                            </StackPanel>
                                        </GroupBox>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <StackPanel Margin="0,5"  x:Name="StackPanelCalibration" Initialized="StackPanelCalibration_Initialized">
                            <ToggleButton  x:Name="ToggleButton2"  Style="{StaticResource ButtonPageControl1}" Content="校正" Background="#F9F9F9"  FontSize="15" Foreground="Black" IsChecked="False" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton2,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <Label Content="模板："/>
                                        <ComboBox  x:Name="ComboxCalibrationTemplate"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,0,10,0"/>
                                    </DockPanel>
                                    <Template:Calibration x:Name="Calibration1" />
                                    <Button  Content="应用校正模板" Click="SendDemo1_Click"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <StackPanel Margin="0,5" x:Name="StackPanelSpectrum"  Initialized="StackPanelSpectrum_Initialized">
                            <ToggleButton  x:Name="ToggleButton3"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9"  Content="光谱仪操作"  FontSize="15" Foreground="Black" IsChecked="False" />
                            <Border  Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton3,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <TextBlock  Text="AveNum" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                        <Slider x:Name="SpectrumSliderAveNum"  Template="{ StaticResource LM_SliderControlTemplate2}" TickFrequency ="0.1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="1" Maximum="100"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock  Text="积分时间" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                        <Slider x:Name="SpectrumSliderIntTime"  Template="{ StaticResource LM_SliderControlTemplate2}" TickFrequency ="1" IsSnapToTickEnabled="True"   SmallChange ="1" LargeChange="1"  Value="100" Maximum="6000"/>
                                    </DockPanel>

                                    <GroupBox Header="DLL Test">
                                        <StackPanel Visibility="Visible">
                                            <UniformGrid Columns="3">
                                                <Button Content="连接光谱仪" Click="SpectrumIni" />
                                                <Button Content="单次校0" Click="Spectrum0" />
                                                <Button Content="单次测试" Click="SpectrumSingleTest" />
                                            </UniformGrid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="MQTT Test">
                                        <StackPanel Visibility="Visible">
                                            <UniformGrid Columns="2">
                                                <Button  Content="初始化" Click="Button_Click_1"/>
                                                <Button  Content="打开" Click="Button_Click_2"/>
                                                <Button  Content="关闭" Click="Button_Click_5"/>
                                                <Button  Content="单次获取数据"  Click="Button_Click_4"/>

                                            </UniformGrid>

                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <StackPanel Margin="0,5">
                            <ToggleButton  x:Name="ToggleButton4"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9"  Content="源表设置"  FontSize="15" Foreground="Black" IsChecked="True" />
                            <Border  Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton4,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel  x:Name="StackPanelVI" Margin="5"  Initialized="StackPanelVI_Initialized" d:DataContext="{d:DesignInstance Type=Template:PassSxSource}" >
                                    <DockPanel Margin="2">
                                        <CheckBox IsChecked="{Binding IsNet}" VerticalAlignment="Center" Content="网络" DockPanel.Dock="Right"/>
                                        <Button x:Name="ButtonSourceMeter1" Margin="10,0"   DockPanel.Dock="Right" Content="打开"  Click="ButtonSourceMeter1_Click"/>
                                        <TextBox x:Name="TextSourceMeterIP" Text="{Binding DevName}" BorderThickness="0,0,0,1"  />
                                    </DockPanel>
                                    <DockPanel Margin="2" >
                                        <RadioButton Content="电压" Width="100" IsChecked="{Binding IsSourceV}" />
                                        <RadioButton Content="电流" IsChecked="{Binding IsSourceV,Converter={StaticResource inverseBooleanConverter}}"/>
                                    </DockPanel>
                                    <UniformGrid Columns="2" Margin="2">
                                        <DockPanel Margin="2">
                                            <TextBlock Text="源值:"  Width="40"/>
                                            <TextBlock DockPanel.Dock="Right"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter}}" Text="V"/>
                                            <TextBlock DockPanel.Dock="Right"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter1}}" Text="mA"/>
                                            <TextBox Text="{Binding MeasureVal}" BorderThickness="0,0,0,1" />
                                        </DockPanel>
                                        <DockPanel Margin="10,2,2,2" >
                                            <TextBlock Text="限值:" Width="40"/>
                                            <TextBlock DockPanel.Dock="Right"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter1}}" Text="V"/>
                                            <TextBlock DockPanel.Dock="Right"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter}}" Text="mA"/>
                                            <TextBox Text="{Binding LmtVal}" BorderThickness="0,0,0,1"/>
                                        </DockPanel>
                                    </UniformGrid>


                                    <UniformGrid  Columns="3" Margin="2">
                                        <Button Content="点亮" Click="MeasureData_Click" Margin="2"/>
                                        <Button Content="设置" Click="StepMeasureData_Click" Margin="2"/>
                                        <Button Content="关闭" Click="MeasureDataClose_Click" Margin="2"/>
                                    </UniformGrid>
                                    <DockPanel Margin="2">
                                        <TextBlock  Text="电压" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                        <TextBlock  DockPanel.Dock="Right" Text="V" Width="30" Block.TextAlignment="Center"/>
                                        <TextBox x:Name="TextSourceMeterV" Text="{Binding V}" BorderThickness="0,0,0,1"  />
                                    </DockPanel>
                                    <DockPanel Margin="2">
                                        <TextBlock  Text="电流" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="0,0,5,0" />
                                        <TextBlock  DockPanel.Dock="Right" Text="mA" Width="30" Block.TextAlignment="Center"/>
                                        <TextBox x:Name="TextSourceMeterI" Text="{Binding I}" BorderThickness="0,0,0,1"  />
                                    </DockPanel>

                                    <DockPanel Margin="2">
                                        <TextBlock Text="模板：" VerticalAlignment="Center" Width="40"/>
                                        <ComboBox  x:Name="ComboxVITemplate"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,0,30,0"/>
                                    </DockPanel>
                                    <StackPanel  x:Name="StackPanelVITemplate"  d:DataContext="{d:DesignInstance Type=Template:SxParam}" >
                                        <DockPanel Margin="2" >
                                            <TextBlock Text="起始:" Width="40" />
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"   Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter1}}" Text="V"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"   Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter}}" Text="mA"/>
                                            <TextBox Text="{Binding  StartMeasureVal}"  BorderThickness="0,0,0,1"/>
                                        </DockPanel>
                                        <DockPanel Margin="2">
                                            <TextBlock Text="结束:"  Width="40"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter1}}" Text="V"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter}}" Text="mA"/>
                                            <TextBox Text="{Binding  StopMeasureVal}" BorderThickness="0,0,0,1"/>
                                        </DockPanel>
                                        <DockPanel Margin="2">
                                            <TextBlock Text="限值:"  Width="40"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"   Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter}}" Text="V"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30" Block.TextAlignment="Center"  Visibility="{Binding IsSourceV,Converter={StaticResource bool2VisibilityConverter1}}" Text="mA"/>
                                            <TextBox Text="{Binding LmtVal}" BorderThickness="0,0,0,1"/>
                                        </DockPanel>
                                        <DockPanel Margin="2">
                                            <TextBlock Text="点:"  Width="40"/>
                                            <TextBlock DockPanel.Dock="Right" Width="30"   Text=""/>
                                            <TextBox Text="{Binding Number}" BorderThickness="0,0,0,1"/>
                                        </DockPanel>
                                        <UniformGrid Columns="2">
                                            <Button Content="扫描" Click="VIScan_Click" Margin="2" />
                                            <Button Content="导出"  Click="VIExport_Click"  Margin="2"/>
                                        </UniformGrid>

                                    </StackPanel>

                                    <GroupBox  Header="MQTTTest" Margin="2">
                                        <UniformGrid Columns="2" Margin="2">
                                            <Button Content="打开"  Click="MQTTVIOpen" Margin="2"/>
                                            <Button Content="关闭"  Click="MQTTVIClose" Margin="2"/>
                                            <Button Content="设置参数" Click="MQTTVISetParam" Margin="2"/>
                                            <Button Content="获取数据" Click="MQTTVIGetData" Margin="2"/>
                                        </UniformGrid>
                                    </GroupBox>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <StackPanel Margin="0,5">
                            <ToggleButton  x:Name="ToggleButton999"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9"  Content="测试"  FontSize="15" Foreground="Black" IsChecked="True" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton999,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <UniformGrid >
                                        <Button Content="打开测试图像"  Margin="10,0" Click="Button_Click"/>
                                        <Button Content="绘制测试图形"  Margin="10,0"  Click="Button1_Click"/>
                                        <Button Content="加载流程引擎"  Margin="10,0"  Click="Button2_Click"/>
                                        <Button Content="执行测试"  Margin="10,0"   Click="Button3_Click"/>
                                        <Button Content="视频测试"  Margin="10,0"   Click="Button4_Click"/>

                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <Grid x:Name="ImageContentGrid" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="ImageGroupGrid" Grid.Column="1"  Width="300"  Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="200"/>
                    </Grid.RowDefinitions>
                    <WindowsFormsHost x:Name="WindowsFormsHost1" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"   Grid.Row="1" Visibility="Visible"  >
                        <winf:PropertyGrid x:Name="PropertyGrid2" Height="200"   >
                        </winf:PropertyGrid>
                    </WindowsFormsHost>
                    <DockPanel Grid.Row="0"  >
                        <Grid DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="GridListHeader0" Grid.Column="0">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="形状" Margin="10,0,0,0"/>
                            </Grid>
                            <Grid x:Name="GridListHeader1" Grid.Column="1">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="序号" Margin="10,0,0,0"/>
                            </Grid>
                            <GridSplitter Grid.Column="0" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader2" Grid.Column="2">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="选中" Margin="10,0,0,0" />
                            </Grid>
                            <GridSplitter Grid.Column="1" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader3" Grid.Column="3">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="位置"  Margin="10,0,0,0"/>
                            </Grid>
                            <GridSplitter Grid.Column="2" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader4" Grid.Column="4">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="角度"  Margin="10,0,0,0" />
                            </Grid>
                        </Grid>
                        <Grid>
                            <Grid.Resources>
                                <DataTemplate x:Key="DrawingVisualCircleTemplate" DataType="{x:Type local:DrawingVisualCircle}" >
                                    <StackPanel  Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="删除" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="圆形" HorizontalAlignment="Center"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                        <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}"  Click="CheckBox_Click" Tag="{Binding .}"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader3,Path=ActualWidth}" HorizontalAlignment="Center">
                                                    <Run Text="{Binding Path = CenterX,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = CenterY,StringFormat={}{0:F0}}"/>
                                        </TextBlock>
                                        <TextBlock  Width="{Binding ElementName=GridListHeader4,Path=ActualWidth}" Text="{Binding Path=Radius}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate x:Key="DrawingVisualRectangleTemplate"  DataType="{x:Type local:DrawingVisualRectangle}">
                                    <StackPanel  Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="删除" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="矩形" HorizontalAlignment="Center"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                        <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}" Click="CheckBox_Click" Tag="{Binding .}"/>
                                        <TextBlock>
                                            <Run Text="{Binding Attribute.Rect.X,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Y,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Width,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Height,StringFormat={}{0:F0}}"/>
\                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                                <converter:DrawCanvasTemplateSelector x:Key="DrawCanvasTemplateSelector"  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}"  DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
                            </Grid.Resources>
                            <ListView  x:Name="ListView1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemTemplateSelector="{StaticResource  DrawCanvasTemplateSelector}" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback" PreviewKeyDown="ListView1_PreviewKeyDown"  SelectionChanged="ListView1_SelectionChanged" >
                            
                            </ListView>

                        </Grid>



                    </DockPanel>
                </Grid>

                <Grid x:Name="ZoomGrid"  Grid.Column="0" Background="#c3c3c3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Height="0.5" Background="#F0F0F0"/>
                    <local:ZoomboxSub x:Name="Zoombox1"  MaxZoom="10"  MinZoom="0.01" Grid.Row="1" Grid.ColumnSpan="2">
                        <local:DrawCanvas x:Name="ImageShow"  Initialized="ImageShow_Initialized" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  MouseDown="ImageShow_MouseDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove"/>
                    </local:ZoomboxSub>
                    <StackPanel Grid.Row="0" Grid.RowSpan="2" >
                        <ToolBar x:Name="ToolBar1" DataContext="{Binding ToolBarTop}"   Loaded="ToolBar1_Loaded" Margin="0,2,4,0"  Background="#AAFFFFFF" ToolBarTray.IsLocked="True" HorizontalAlignment="Center">
                            <ToolBar.Resources>
                                <ResourceDictionary Source="/Theme/Icons.xaml"/>
                            </ToolBar.Resources>
                            <ToggleButton x:Name="ToggleButtonMouse"  IsChecked="{Binding Path=Move}"  Margin="4,0,1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageMouse}"/>
                            </ToggleButton>
                            <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding Activate}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagedrag}"/>
                            </ToggleButton>
                            <Button Command="{Binding ZoomUniform}"  Margin="1,0"> 
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImage1_1}"/>
                            </Button>
                            <Button Command="{Binding ZoomIncrease}"  Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_in}" />
                            </Button>
                            <Button  Command="{Binding ZoomDecrease}"  Margin="1,0">
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_out}"/>
                            </Button>
                            <Button Command="{Binding ZoomNone}"  Margin="1,0">
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageexpend}"/>
                            </Button>
                            <TextBox  Background="Transparent"  BorderBrush="Black"  BorderThickness="1"  HorizontalContentAlignment="Center" Width="50" Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:F2}}" />
                            <ToggleButton  Click="Button5_Click">
                                <Image  Style="{StaticResource ToolBarImage}" Margin="1,0" Source="{StaticResource DrawingImagegridlines}"/>
                            </ToggleButton>
                            <ToggleButton  Click="Button6_Click">
                                <Image  Style="{StaticResource ToolBarImage}" Margin="1,0" Source="{StaticResource DrawingImageruler}"/>
                            </ToggleButton>
                            <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" Click="Button7_Click">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageeraser}"/>
                            </ToggleButton>
                            <ToggleButton Click="Button8_Click" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageMax}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageCircle}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageRect}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawPolygon}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagePolygon}"/>
                            </ToggleButton>
                        </ToolBar>
                    </StackPanel>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="0"  Width="1" />
            <GridSplitter  Grid.Column="2"  Width="1" HorizontalAlignment="Left" />
        </Grid>
        <Grid Grid.Row="2" x:Name="StatusBarGrid" d:DataContext="{d:DesignInstance SettingUp:SoftwareConfig}" Visibility="{Binding IsOpenStatusBar,Converter={StaticResource bool2VisibilityConverter}}" >
            <StatusBar>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem  x:Name="StatusBarItem3" d:DataContext="{d:DesignInstance  SettingUp:ProjectConfig}">
                    <DockPanel>
                        <TextBlock Text="当前工程: "/>
                        <TextBlock Text="{Binding ProjectName}"  MouseLeftButtonDown="TextBlock_MouseLeftButtonDown2"/>
                    </DockPanel>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1" >
                    <DockPanel>
                        <DockPanel.Resources>
                            <ResourceDictionary Source="/Theme/Icons.xaml"/>
                        </DockPanel.Resources>
                        <StatusBarItem  MouseLeftButtonDown="TextBlock_MouseLeftButtonDown1" Visibility="{Binding IsUseMySql,Converter={StaticResource bool2VisibilityConverter}}" ToolTip="MySql" >
                            <ToggleButton x:Name="StatusBarMysql" d:DataContext="{d:DesignInstance mqtt:MQTTControl}" Style="{StaticResource ButtonDrawingImageMysql}"  Height="20"  Margin="0,-10" IsChecked="{Binding IsConnect,Mode=OneWay}"  IsEnabled="False"/>
                        </StatusBarItem>
                        <StatusBarItem MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" Visibility="{Binding IsUseMQTT,Converter={StaticResource bool2VisibilityConverter}}" ToolTip="MQTT">
                            <ToggleButton  x:Name="StatusBarMqtt" d:DataContext="{d:DesignInstance mqtt:MQTTControl}"  Style="{StaticResource ButtonDrawingImageMQTT}"  Height="20"  Margin="0,-10" IsChecked="{Binding IsConnect,Mode=OneWay}" IsEnabled="False" />
                        </StatusBarItem>
                        <StatusBarItem  x:Name="StatusBarItem1" Visibility="Collapsed"  Content="{Binding Path=MemoryThis}"/>
                        <StatusBarItem  x:Name="StatusBarItem2"   Content="{Binding Time}"/>
                    </DockPanel>
                </StatusBarItem>

            </StatusBar>
        </Grid>
    </Grid>
</Window>
