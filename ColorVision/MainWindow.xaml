<Window x:Class="ColorVision.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorVision"
        xmlns:effects="http://gu.se/Geometry"
        xmlns:ScottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
        xmlns:Template ="clr-namespace:ColorVision.Template"
        xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:mqtt ="clr-namespace:ColorVision.MQTT"
        xmlns:SettingUp ="clr-namespace:ColorVision.SettingUp"
        xmlns:converter="clr-namespace:ColorVision.Converter"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:co="clr-namespace:ColorVision.Controls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}"
        Title="ColorVision" Height="720" Width="1280"  Initialized="Window_Initialized">
    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="WaitControl" Grid.Row="0" Grid.RowSpan="3" Panel.ZIndex="9" Visibility="Collapsed">
            <Grid   Background="Black"  Opacity="0.3"/>
            <Border   Background="#F9F9F9"  Height="250" Width="250"  CornerRadius="10">
                <Border Background="#F3F3F3" BorderBrush="#EAEAEA" BorderThickness="1" CornerRadius="5" Margin="5">
                    <Grid>
                        <co:ProgressRing  BorderBrush="Red" Margin="30" />
                        <TextBlock x:Name="WaitControlText" Text="正在计算" HorizontalAlignment="Center" FontSize="16"/>
                        <ProgressBar x:Name="WaitControlProgressBar" Visibility="Collapsed" BorderThickness="0"  Maximum="100" Minimum="0"  Height="20" Margin="5" VerticalAlignment="Bottom" />
                    </Grid>
                </Border>

            </Border>
        </Grid>
        <Grid Grid.Row="0">
            <Menu x:Name="Menu1" Height ="24" Background="#F3F3F3"  Initialized="Menu_Initialized">
                <MenuItem x:Name="FileMenuItem" Header="文件(_F)">
                    <MenuItem Header="新建(_O)" Click="MenuItem_ProjectNew_Click" InputGestureText="Ctrl + O">
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE8F4;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="打开(_O)" Click="MenuItem_ProjectOpen_Click" InputGestureText="Ctrl + N">
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE8E5;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="退出(_X)" InputGestureText="Alt + F4" Click="MenuItem_Exit"/>
                </MenuItem>
                <MenuItem Header="配置(_S)">
                    <MenuItem Header="服务配置(_S)"  Tag="ServiceParam" Click="MenuItem_Template"/>
                    <MenuItem Header="设备配置(_D)"  Tag="DeviceParam" Click="MenuItem_Template"/>
                    <MenuItem Header="相机视频配置(_V)" Click="MenuItem10_Click"/>
                </MenuItem>
                <MenuItem Header="模板(_M)">
                    <MenuItem Header="流程模板设置(_F)" Tag="FlowParam"  Click="MenuItem_Template"/>
                    <MenuItem Header="关注点模板设置(_P)" Tag="FocusParm" Click="MenuItem_Template"/>
                    <MenuItem Header="测量模板设置(_S)" Tag="MeasureParm" Click="MenuItem_Template"/>
                    <Separator/>
                    <MenuItem Header="_AOI参数模板设置" Tag="AoiParam" Click="MenuItem_Template"/>
                    <MenuItem Header="校正模板设置(_C)" Tag="Calibration"  Click="MenuItem_Template"/>
                    <MenuItem Header="_PG通讯模板设置" Tag="PGParam"  Click="MenuItem_Template"/>
                    <MenuItem Header="数据判断模板设置(_J)" Tag="LedReusltParams"  Click="MenuItem_Template"/>
                    <MenuItem Header="源表模板设置(_V)"  Tag="SxParms" Click="MenuItem_Template"/>
                </MenuItem>
                <MenuItem  x:Name="MenuStatusBar"  d:DataContext="{d:DesignInstance SettingUp:SoftwareConfig}"  Header="视图(_V)">
                    <MenuItem Header="侧边栏(_M)"  IsChecked="{Binding SoftwareSetting.IsOpenSidebar}"  Click="MenuStatusBar_Click"/>
                    <MenuItem Header="状态栏(_S)" IsChecked="{Binding SoftwareSetting.IsOpenStatusBar}"  Click="MenuStatusBar_Click" />
                </MenuItem>
                <MenuItem Header="工具(_T)">
                    <MenuItem Header="流程引擎(_F)" Click="MenuItem9_Click"/>
                    <MenuItem Header="MQTT日志(_Q)" Click="MenuItem_Click"/>
                    <MenuItem Header="MQTT心跳(_Q)" Click="MenuItem11_Click"/>
                    <MenuItem Header="MQTT列表(_L)" Click="MenuItem12_Click"/>

                    <Separator/>
                    <MenuItem Header="设置(_O)"  Click="MenuItem_Click_2"   InputGestureText="Ctrl + I"  >
                        <MenuItem.Icon >
                            <TextBlock Text="&#xE713;" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <!--<MenuItem Header="标定(_A)">
                    <MenuItem Header="四色校正" Click="MenuItem_Click8"/>
                </MenuItem>-->
                
                <MenuItem Header="帮助(_H)">
                    <MenuItem Header="打开日志(_L)"  Click="Log_Click"/>
                    <MenuItem Header="打开配置文件(_S)"  Click="Setting_Click"/>
                    <MenuItem Header="打开日志文件夹(_F)"  Click="LogF_Click"/>
                    <Separator/>
                    <MenuItem Header="检查更新(_U)" Click="Update_Click"/>
                    <MenuItem Header="我的许可证(_R)"  Click="License_Click"/>
                    <MenuItem Header="关于(_A)" Click="About_Click"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid x:Name="ContentGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid  Grid.Row="0" Background="#F9F9F9" Width="300" x:Name="SiderBarGrid" d:DataContext="{d:DesignInstance SettingUp:SoftwareConfig}" Visibility="{Binding SoftwareSetting.IsOpenSidebar,Converter={StaticResource bool2VisibilityConverter}}" >
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Margin="0,5">
                            <ToggleButton  x:Name="ToggleButton999"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9"  Content="测试"  FontSize="15" Foreground="Black" IsChecked="True" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton999,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <UniformGrid Columns="2" >
                                        <Button Content="打开测试图像"  Margin="10,0" Click="Button_Click"/>
                                        <Button Content="绘制测试图形"  Margin="10,0"  Click="Button1_Click"/>
                                        <Button Content="视频测试"  Margin="10,0"  Click="Button4_Click"/>
                                    </UniformGrid>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <StackPanel x:Name="StackPanelMQTTPGs" Initialized="StackPanelMQTTPGs_Initialized">

                        </StackPanel>

                        <StackPanel x:Name="StackPanelMQTTCameras" Initialized="StackPanelMQTTCameras_Initialized">
                            
                        </StackPanel>


                        <StackPanel Margin="0,5"  x:Name="StackPanelCalibration" Initialized="StackPanelCalibration_Initialized">
                            <ToggleButton  x:Name="ToggleButton2"  Style="{StaticResource ButtonPageControl1}" Content="校正" Background="#F9F9F9"  FontSize="15" Foreground="Black" IsChecked="False" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton2,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <Label Content="模板："/>
                                        <ComboBox  x:Name="ComboxCalibrationTemplate"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,0,10,0"/>
                                    </DockPanel>
                                    <Template:Calibration x:Name="Calibration1" />
                                    <Button  Content="应用校正模板" Click="SendDemo1_Click"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <StackPanel x:Name="StackPanelMQTTSpectrums" Initialized="StackPanelMQTTSpectrums_Initialized">

                        </StackPanel>
                        <StackPanel x:Name="StackPanelMQTTVIs" Initialized="StackPanelMQTTVIs_Initialized">

                        </StackPanel>


                        <StackPanel Margin="0,5" Initialized="StackPanelFlow_Initialized">
                            <ToggleButton  x:Name="ToggleButton_flow"  Style="{StaticResource ButtonPageControl1}" Background="#F9F9F9"  Content="流程"  FontSize="15" Foreground="Black" IsChecked="True" />
                            <Border Style="{DynamicResource BorderModuleArea}" Visibility="{Binding ElementName=ToggleButton_flow,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <StackPanel Margin="5">
                                    <DockPanel>
                                        <Label Content="模板："/>
                                        <ComboBox  x:Name="FlowTemplate" Style="{StaticResource ComboBox.Small}"  SelectedValuePath="Value"  DisplayMemberPath="Key"  Height="20" Margin="0,0,10,0"/>
                                    </DockPanel>
                                    <Button  Margin="5" Content="执行流程"  Click="Button_FlowRun_Click"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <Grid x:Name="ImageContentGrid" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="ImageGroupGrid" Grid.Column="1"  Width="300"  Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="200"/>
                    </Grid.RowDefinitions>
                    <WindowsFormsHost x:Name="WindowsFormsHost1" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"   Grid.Row="1" Visibility="Visible"  >
                        <winf:PropertyGrid x:Name="PropertyGrid2" Height="200"   >
                        </winf:PropertyGrid>
                    </WindowsFormsHost>
                    <DockPanel Grid.Row="0"  >
                        <Grid DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="GridListHeader0" Grid.Column="0">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="形状" Margin="10,0,0,0"/>
                            </Grid>
                            <Grid x:Name="GridListHeader1" Grid.Column="1">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="序号" Margin="10,0,0,0"/>
                            </Grid>
                            <GridSplitter Grid.Column="0" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader2" Grid.Column="2">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="选中" Margin="10,0,0,0" />
                            </Grid>
                            <GridSplitter Grid.Column="1" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader3" Grid.Column="3">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="位置"  Margin="10,0,0,0"/>
                            </Grid>
                            <GridSplitter Grid.Column="2" Width="2"  Background="AliceBlue"/>
                            <Grid x:Name="GridListHeader4" Grid.Column="4">
                                <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="角度"  Margin="10,0,0,0" />
                            </Grid>
                        </Grid>
                        <Grid>
                            <Grid.Resources>
                                <DataTemplate x:Key="DrawingVisualCircleTemplate" DataType="{x:Type local:DrawingVisualCircle}" >
                                    <StackPanel  Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="删除" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="圆形" HorizontalAlignment="Center"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                        <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}"  Click="CheckBox_Click" Tag="{Binding .}"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader3,Path=ActualWidth}" HorizontalAlignment="Center">
                                                    <Run Text="{Binding Path = CenterX,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = CenterY,StringFormat={}{0:F0}}"/>
                                        </TextBlock>
                                        <TextBlock  Width="{Binding ElementName=GridListHeader4,Path=ActualWidth}" Text="{Binding Path=Radius}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate x:Key="DrawingVisualRectangleTemplate"  DataType="{x:Type local:DrawingVisualRectangle}">
                                    <StackPanel  Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="删除" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="矩形" HorizontalAlignment="Center"/>
                                        <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                        <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}" Click="CheckBox_Click" Tag="{Binding .}"/>
                                        <TextBlock>
                                            <Run Text="{Binding Attribute.Rect.X,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Y,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Width,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Height,StringFormat={}{0:F0}}"/>
\                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                                <converter:DrawCanvasTemplateSelector x:Key="DrawCanvasTemplateSelector"  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}"  DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
                            </Grid.Resources>
                            <ListView  x:Name="ListView1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemTemplateSelector="{StaticResource  DrawCanvasTemplateSelector}" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback" PreviewKeyDown="ListView1_PreviewKeyDown"  SelectionChanged="ListView1_SelectionChanged" >
                            
                            </ListView>

                        </Grid>



                    </DockPanel>
                </Grid>

                <Grid x:Name="ZoomGrid"  Grid.Column="0" Background="#c3c3c3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Height="0.5" Background="#F0F0F0"/>
                    <local:ZoomboxSub x:Name="Zoombox1"  MaxZoom="10"  MinZoom="0.01" Grid.Row="1" Grid.ColumnSpan="2">
                        <local:DrawCanvas x:Name="ImageShow"  Initialized="ImageShow_Initialized" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  MouseDown="ImageShow_MouseDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove"/>
                    </local:ZoomboxSub>
                    <StackPanel Grid.Row="0" Grid.RowSpan="2" >
                        <ToolBar x:Name="ToolBar1" DataContext="{Binding ToolBarTop}"   Loaded="ToolBar1_Loaded" Margin="0,2,4,0"  Background="#AAFFFFFF" ToolBarTray.IsLocked="True" HorizontalAlignment="Center">
                            <ToolBar.Resources>
                                <ResourceDictionary Source="/Theme/Icons.xaml"/>
                            </ToolBar.Resources>
                            <ToggleButton x:Name="ToggleButtonMouse"  IsChecked="{Binding Path=Move}"  Margin="4,0,1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageMouse}"/>
                            </ToggleButton>
                            <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding Activate}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagedrag}"/>
                            </ToggleButton>
                            <Button Command="{Binding ZoomUniform}"  Margin="1,0"> 
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImage1_1}"/>
                            </Button>
                            <Button Command="{Binding ZoomIncrease}"  Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_in}" />
                            </Button>
                            <Button  Command="{Binding ZoomDecrease}"  Margin="1,0">
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_out}"/>
                            </Button>
                            <Button Command="{Binding ZoomNone}"  Margin="1,0">
                                <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageexpend}"/>
                            </Button>
                            <TextBox  Background="Transparent"  BorderBrush="Black"  BorderThickness="1"  HorizontalContentAlignment="Center" Width="50" Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:F2}}" />
                            <ToggleButton  Click="Button5_Click">
                                <Image  Style="{StaticResource ToolBarImage}" Margin="1,0" Source="{StaticResource DrawingImagegridlines}"/>
                            </ToggleButton>
                            <ToggleButton  Click="Button6_Click">
                                <Image  Style="{StaticResource ToolBarImage}" Margin="1,0" Source="{StaticResource DrawingImageruler}"/>
                            </ToggleButton>
                            <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" Click="Button7_Click">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageeraser}"/>
                            </ToggleButton>
                            <ToggleButton Click="Button8_Click" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageMax}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageCircle}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageRect}"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawPolygon}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagePolygon}"/>
                            </ToggleButton>
                        </ToolBar>
                    </StackPanel>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="0"  Width="1" />
            <GridSplitter  Grid.Column="2"  Width="1" HorizontalAlignment="Left" />
        </Grid>
        <Grid Grid.Row="2" x:Name="StatusBarGrid" d:DataContext="{d:DesignInstance SettingUp:GlobalSetting}" Visibility="{Binding SoftwareConfig.SoftwareSetting.IsOpenStatusBar,Converter={StaticResource bool2VisibilityConverter}}" >
            <StatusBar>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem  x:Name="StatusBarItem3">
                    <DockPanel>
                        <TextBlock Text="当前工程: "/>
                        <TextBlock Text="{Binding  SoftwareConfig.SolutionConfig.SolutionName}"  MouseLeftButtonDown="TextBlock_MouseLeftButtonDown2"/>
                    </DockPanel>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1" >
                    <DockPanel>
                        <DockPanel.Resources>
                            <ResourceDictionary Source="/Theme/Icons.xaml"/>
                        </DockPanel.Resources>
                        <StatusBarItem  MouseLeftButtonDown="TextBlock_MouseLeftButtonDown1" Visibility="{Binding SoftwareConfig.IsUseMySql,Converter={StaticResource bool2VisibilityConverter}}" ToolTip="MySql" >
                            <ToggleButton x:Name="StatusBarMysql" Style="{StaticResource ButtonDrawingImageMysql}"  Height="20"  Margin="0,-10" IsChecked="{Binding SoftwareConfig.MySqlControl.IsConnect,Mode=OneWay}"  IsEnabled="False"/>
                        </StatusBarItem>
                        <StatusBarItem MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" Visibility="{Binding SoftwareConfig.IsUseMQTT,Converter={StaticResource bool2VisibilityConverter}}" ToolTip="MQTT">
                            <ToggleButton  x:Name="StatusBarMqtt"   Style="{StaticResource ButtonDrawingImageMQTT}"  Height="20"  Margin="0,-10" IsChecked="{Binding SoftwareConfig.MQTTControl.IsConnect,Mode=OneWay}" IsEnabled="False" />
                        </StatusBarItem>
                        <StatusBarItem  x:Name="StatusBarItem1" Visibility="Collapsed"  Content="{Binding PerformanceControl.MemoryThis}"/>
                        <StatusBarItem  x:Name="StatusBarItem2"   Content="{Binding PerformanceControl.Time}"/>
                    </DockPanel>
                </StatusBarItem>

            </StatusBar>
        </Grid>
    </Grid>
</Window>
