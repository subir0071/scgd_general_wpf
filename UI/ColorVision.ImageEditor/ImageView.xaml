<UserControl x:Class="ColorVision.ImageEditor.ImageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.ImageEditor"
             xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             xmlns:converter="clr-namespace:ColorVision.ImageEditor.Draw.Converter"
             xmlns:draw ="clr-namespace:ColorVision.ImageEditor.Draw"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:base="clr-namespace:ColorVision.Themes.Controls;assembly=ColorVision.Themes"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" Initialized="UserControl_Initialized" AllowDrop="True">
    <UserControl.Resources>
        <GeometryDrawing x:Key="GridSquare"
                 Brush="{DynamicResource GlobalTextBrush}"
                 Geometry="M0,0 L0,1 1,1 1,0 Z" />
        <DrawingBrush x:Key="TransparentGridBrush"
              TileMode="Tile"
              ViewportUnits="Absolute"
              Viewport="0 0 20 20"
              Opacity="0.1">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <!-- Gray square -->
                    <GeometryDrawing Brush="Gray" Geometry="M0,0 L0,10 10,10 10,0 Z" />
                    <!-- Transparent square -->
                    <GeometryDrawing Brush="Transparent" Geometry="M10,0 L10,10 20,10 20,0 Z" />
                    <!-- Another row -->
                    <GeometryDrawing Brush="Transparent" Geometry="M0,10 L0,20 10,20 10,10 Z" />
                    <GeometryDrawing Brush="Gray" Geometry="M10,10 L10,20 20,20 20,10 Z" />
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource GlobalTextBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{DynamicResource GlobalTextBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Drawing="{StaticResource SmallGridGeometry}" Opacity="0.1" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Opacity="0.5"
                      Viewport="0 0 200 200"
                      Drawing="{StaticResource LargeGridGeometry}" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="ImageContentGrid" Grid.Row="1" >
            <Grid Background="{StaticResource LargeGridLinesDrawingBrush}" Visibility="Collapsed"/>

            <Grid x:Name="ImageGroupGrid" HorizontalAlignment="Right" Width="400"  Visibility="{Binding ElementName=PropertyIsChecked,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="300"/>
                </Grid.RowDefinitions>
                <WindowsFormsHost x:Name="WindowsFormsHost1"  Grid.Row="1" Height="300">
                    <winf:PropertyGrid x:Name="PropertyGrid2"    >
                    </winf:PropertyGrid>
                </WindowsFormsHost>
            </Grid>

            <Grid Background="{StaticResource SmallGridLinesDrawingBrush}"  Visibility="Collapsed"/>

            <Grid x:Name="ZoomGrid" Background="{StaticResource TransparentGridBrush}">
                <draw:ZoomboxSub x:Name="Zoombox1"  x:FieldModifier="public"  MaxZoom="{Binding MaxZoom}"  MinZoom="{Binding MinZoom}"  ContextMenuOpening="Zoombox1_ContextMenuOpening" Grid.Row="1" Grid.RowSpan="2">
                    <draw:DrawCanvas x:Name="ImageShow"   x:FieldModifier="public" Initialized="ImageShow_Initialized"  FocusVisualStyle="{x:Null}" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  PreviewMouseLeftButtonDown="ImageShow_PreviewMouseLeftButtonDown"  PreviewMouseRightButtonDown="ImageShow_PreviewMouseRightButtonDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove">
                    </draw:DrawCanvas>
                </draw:ZoomboxSub>

                <ToolBarTray  x:Name="ToolBarLayers"  x:FieldModifier="public" Orientation="Horizontal" VerticalAlignment="Top" Grid.Row="0" Grid.RowSpan="2"  HorizontalAlignment="Right" Visibility="Collapsed">
                    <ToolBar Style="{StaticResource ToolBarBaseStyle}"  Margin="0,2,4,0"  ToolBarTray.IsLocked="True" >
                        <ComboBox x:Name="ComboBoxLayers"  x:FieldModifier="public"  SelectedIndex="0"/>
                    </ToolBar>
                </ToolBarTray>

                <ToolBarTray  x:Name="ToolBarAl"  x:FieldModifier="public" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="0" Grid.RowSpan="2"  HorizontalAlignment="Left" Visibility="Visible">
                    <ToolBar Style="{StaticResource ToolBarBaseStyle}" ToolBarTray.IsLocked="True" >
                        <StackPanel Orientation="Horizontal" >
                            <ComboBox x:Name="ComboxPOITemplate"  x:FieldModifier="public" Width="100" Style="{StaticResource ComboBox.Small}" HorizontalAlignment="Left" SelectedValuePath="Value"  DisplayMemberPath="Key"/>
                            <Button x:Name="ButtonCalculPOI"  x:FieldModifier="public" Content="POI"/>
                        </StackPanel>
                    </ToolBar>
                </ToolBarTray>

                <Border x:Name="ToolBarBottom" d:DataContext="{d:DesignInstance draw:ImageEditViewMode}" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}" Padding="4" CornerRadius="5" Background="{DynamicResource SecondaryRegionBrush}"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  Margin="0,0,0,10">
                    <Grid>
                        <StackPanel Orientation="Horizontal" >
                            <ToggleButton  IsChecked="{Binding Measure}" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                                <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageruler}"  Margin="-5"/>
                            </ToggleButton>
                            <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" Click="Button7_Click" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                                <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageeraser}"  Margin="-5"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageCircle}"  Margin="-5"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageRect}"  Margin="-5"/>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding DrawPolygon}"  >
                                <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagePolygon}"  Margin="-5"/>
                            </ToggleButton>
                            <Button x:Name="reference"  Click="reference_Click" Margin="1,0">
                                <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource ConcentricCirclesDrawImg}"  Margin="-5"/>
                            </Button>
                            <Popup x:Name="menuPop1" StaysOpen="False" Margin="0" PlacementTarget="{Binding ElementName=reference}"  AllowsTransparency="True">
                                <StackPanel Margin="0">
                                    <Button Content="无" Command="{Binding ToolConcentricCircle.SelectNoneCommand}" Click="reference1_Click" Width="80" Tag="-1"/>
                                    <Button Content="十字准线" Command="{Binding ToolConcentricCircle.Select2Command}" Click="reference1_Click" Width="80" Tag="2"/>
                                    <Button Content="同心圆" Command="{Binding ToolConcentricCircle.Select0Command}" Click="reference1_Click" Width="80" Tag="0"/>
                                    <Button Content="单十字准线" Command="{Binding ToolConcentricCircle.Select1Command}" Click="reference1_Click" Width="80"  Tag="1"/>
                                </StackPanel>
                            </Popup>
                        </StackPanel>

                    </Grid>
                </Border>


                <ToolBarTray x:Name="ToolBar1" DataContext="{Binding ToolBarTop}" VerticalAlignment="Top" Grid.Row="0" Grid.RowSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <ToolBar Style="{StaticResource ToolBarBaseStyle}"  Margin="0,2,4,0"  ToolBarTray.IsLocked="True">
                        <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding ImageEditMode}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                            <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagedrag}" Margin="-5"/>
                        </ToggleButton>
                        <ToggleButton x:Name="ToggleButtonMouse"  IsChecked="{Binding ShowImageInfo}" >
                            <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMouse}"  Margin="-5"/>
                        </ToggleButton>
                        <Button Command="{Binding ZoomUniform}"  Margin="1,0">
                            <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImage1_1}"  Margin="-5"/>
                        </Button>
                        <Button Command="{Binding ZoomIncrease}"  Margin="1,0">
                            <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagezoom_in}"   Margin="-5"/>
                        </Button>
                        <Button  Command="{Binding ZoomDecrease}"  Margin="1,0">
                            <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagezoom_out}"  Margin="-5"/>
                        </Button>
                        <Button Command="{Binding RotateLeftCommand}" Margin="1,0">
                            <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DIToolRotalLeftIcon}"  Margin="-5"/>
                        </Button>
                        <Button Command="{Binding RotateRightCommand}" Margin="1,0">
                            <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DIToolRotalRightIcon}"  Margin="-5"/>
                        </Button>
                        <Button Command="{Binding ZoomNone}"  Margin="1,0">
                            <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageexpend}"  Margin="-5"/>
                        </Button>
                        <ToggleButton Command="{Binding MaxCommand}" Margin="1,0" >
                            <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMax}"  Margin="-5"/>
                        </ToggleButton>
                        <TextBox  Background="Transparent" BorderThickness="1"  HorizontalContentAlignment="Center"  Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:P1}}"/>
                        <Button   Command="{Binding OpenProperty}" Margin="1,0">
                            <TextBlock Text="&#xE713;" FontFamily="Segoe MDL2 Assets" Margin="-5" FontSize="15" Foreground="{DynamicResource GlobalTextBrush}"/>
                        </Button>

                        <ToggleButton IsChecked="{Binding Gridline.IsShow}" >
                            <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIGridlines}"  Margin="-5"/>
                        </ToggleButton>

                    </ToolBar>
                </ToolBarTray>
                <ToolBarTray x:Name="ToolBarRight"  HorizontalAlignment="Left" DataContext="{Binding ToolBarTop}" Orientation="Vertical" Margin="2,50,0,0" Grid.Row="0" Grid.RowSpan="2"  VerticalAlignment="Top">
                    <ToolBar ToolBarTray.IsLocked="True" Padding="2,3" >
                        <Button Click="Button_Click" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource openDrawingImage}" Margin="-5"/>
                        </Button>
                        <Button Command="{Binding SaveImageCommand}" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageSave}"  Margin="-5"/>
                        </Button>
                        <Button Command="{Binding ClearImageCommand}" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageClear}"  Margin="-5"/>
                        </Button>
                    </ToolBar>
                </ToolBarTray>

                <ToolBarTray x:Name="ToolBarLeft"   d:DataContext="{Binding Config}" Orientation="Vertical" Margin="2,50,2,0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <ToolBar ToolBarTray.IsLocked="True" Padding="2,3" >
                        <ToggleButton x:Name="AdvancedButton" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIExpand}"  Margin="-5"/>
                        </ToggleButton>
                        <Button x:Name="HistogramButton" Click="HistogramButton_Click" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIHistogram}"  Margin="-5"/>
                        </Button>
                        <Button x:Name="Button1931"  x:FieldModifier="public" Margin="0,0,0,2">
                            <Image Style="{StaticResource ToolBarImage}"  Source="/ColorVision.ImageEditor;component/Assets/Image/CIE1931xy1.png" Margin="-5"/>
                        </Button>

                        <Button  Content="3D" Click="Button_3D_Click" Padding="5" Margin="0,0,0,2"/>

                        <Button  Content="白" Padding="8,5" Click="AdjustWhiteBalance_Click" Margin="0,0,0,2"/>

                        <StackPanel>
                            <ToggleButton x:Name="Pseudo"  Click="ToggleButton_Click"  Margin="0,0,0,2" >
                                <Image  Style="{StaticResource ToolBarImage}"   Source="/ColorVision.ImageEditor;component/Assets/png/PowerToy.png" Margin="-5"/>
                            </ToggleButton>
                            <Grid  Height="200"  Visibility="{Binding ElementName=Pseudo,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBox Grid.Row="0" Width="28" Text="{Binding ValueEnd, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}"  Background="Transparent"  BorderThickness="0"  HorizontalContentAlignment="Center" />
                                <TextBox Grid.Row="2" Width="28" Text="{Binding ValueStart, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}" Background="Transparent"  BorderThickness="0" HorizontalContentAlignment="Center"/>
                                <Grid Grid.Row="1"   Width="18">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0"  x:Name="RowDefinitionStart"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="0"  x:Name="RowDefinitionEnd"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" Background="White" CornerRadius="10,10,0,0"/>
                                    <Border Grid.Row="1"  Background="Transparent">
                                        <Image x:Name="ColormapTypesImage" Source="/ColorVision.ImageEditor;component/Assets/Image/pictureBox1.Image.png" Stretch="Fill" VerticalAlignment="Top"/>
                                    </Border>
                                    <Border Grid.Row="2" Background="Black" CornerRadius="0,0,10,10 "/>
                                </Grid>
                                <hc:RangeSlider Grid.Row="1"  x:Name="PseudoSlider" FocusVisualStyle="{x:Null}" ValueChanged="PseudoSlider_ValueChanged"  Style="{StaticResource RangeSliderBaseStyle}" Background="Transparent" hc:TipElement.Visibility="Visible" hc:TipElement.Placement="Left" hc:TipElement.StringFormat="#0" ValueEnd="255"  Maximum="255" ValueStart="0"  Minimum="0" Orientation="Vertical" HorizontalAlignment="Center" />
                            </Grid>
                        </StackPanel>
                    </ToolBar>
                </ToolBarTray>


                <Border x:Name="BorderPropertieslayers" Background="#55000000" Visibility="Collapsed" Grid.Row="1" VerticalAlignment="Center"  HorizontalAlignment="Center"  Margin="20" CornerRadius="10" >
                    <StackPanel Margin="10">
                        <TextBlock x:Name="InfoText" Text="" Foreground="White"  HorizontalAlignment="Center" />
                    </StackPanel>
                </Border>
            </Grid>


            <Grid x:Name="WaitControl"  x:FieldModifier="public" Grid.Row="0" Grid.ColumnSpan="2" Panel.ZIndex="9" Visibility="Collapsed">
                <Grid   Background="Black"  Opacity="0.3"/>
                <Border   Background="#F9F9F9"  Height="250" Width="250"  CornerRadius="10">
                    <Border Background="#F3F3F3" BorderBrush="#EAEAEA" BorderThickness="1" CornerRadius="5" Margin="5">
                        <Grid>
                            <base:ProgressRing  BorderBrush="Red" Margin="30" />
                            <TextBlock x:Name="WaitControlText"   x:FieldModifier="public" Text="DataLoading" HorizontalAlignment="Center" FontSize="16"/>
                            <ProgressBar x:Name="WaitControlProgressBar"  x:FieldModifier="public" Visibility="Collapsed" BorderThickness="0"  Maximum="100" Minimum="0"  Margin="5" VerticalAlignment="Bottom" />
                        </Grid>
                    </Border>
                </Border>
            </Grid>
        </Grid>

        <Grid Grid.Column="1" Width="300" Visibility="{Binding ElementName=AdvancedButton, Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
            <ScrollViewer Margin="5,0">
                <StackPanel x:Name="AdvancedStackPanel">
                    <Border Grid.Column="1" Background="{DynamicResource GlobalBorderBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1"  Margin="0,5" CornerRadius="5">
                        <StackPanel Margin="5">
                            <DockPanel Margin="0,0,0,5">
                                <ui:ToggleSwitch x:Name="PropertyIsChecked"  DockPanel.Dock="Right" IsChecked="False"/>
                                <TextBlock Text="显示编辑属性"/>
                            </DockPanel>
                            <ToggleButton  Click="CM_AutoLevelsAdjust" Margin="0,0,0,2">
                                <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIContrast}" Margin="-5"/>
                            </ToggleButton>
                            <ToggleButton  Content="Lab" Padding="3,5" Click="CM_AutomaticColorAdjustment" Margin="0,0,0,2"/>
                            <ToggleButton Click="CM_AutomaticToneAdjustment" Margin="0,0,0,2">
                                <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DITone}" Margin="-5"/>
                            </ToggleButton>
                        </StackPanel>
                    </Border>

                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
