<UserControl x:Class="ColorVision.Engine.Media.ImageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorVision.Engine.Media"
             xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             xmlns:converter="clr-namespace:ColorVision.Draw.Converter;assembly=ColorVision.Util"
             xmlns:draw ="clr-namespace:ColorVision.Draw;assembly=ColorVision.Util"
             xmlns:resx="clr-namespace:ColorVision.Engine.Properties"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             d:DataContext="{d:DesignInstance local:ImageView}"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" Initialized="UserControl_Initialized" AllowDrop="True">
    <UserControl.Resources>
        <DataTemplate x:Key="DrawingVisualCircleTemplate" >
            <StackPanel  Orientation="Horizontal">
                <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Path=ID}" HorizontalAlignment="Center"/>
                <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="True" Tag="{Binding .}"/>
                <TextBlock Width="{Binding ElementName=GridListHeader3,Path=ActualWidth}" HorizontalAlignment="Center">
                                                    <Run Text="("/>
                                                    <Run Text="{Binding Path = CenterX,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = CenterY,StringFormat={}{0:F0}}"/>
                                                    <Run Text=")"/>
                </TextBlock>
                <TextBlock  Width="{Binding ElementName=GridListHeader4,Path=ActualWidth}" Text="{Binding Path=Radius}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DrawingVisualRectangleTemplate" >
            <StackPanel  Orientation="Horizontal">
                <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Path=ID}" HorizontalAlignment="Center"/>
                <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="True" Tag="{Binding .}"/>
                <TextBlock  Width="{Binding ElementName=GridListHeader4,Path=ActualWidth}" Text="{Binding Attribute.Rect}" />
            </StackPanel>
        </DataTemplate>

        <converter:DrawCanvasTemplateSelector x:Key="DrawCanvasTemplateSelector"  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}"  DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
    </UserControl.Resources>
    <Grid x:Name="ImageContentGrid" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBox Grid.Column="0" x:Name="TextBox1" Background="Transparent" Width="5" BorderThickness="0" Foreground="Transparent"/>
        <Grid x:Name="ImageGroupGrid" Grid.Column="1"  Width="300"  Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>
            <WindowsFormsHost x:Name="WindowsFormsHost1" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"   Grid.Row="1" Visibility="Visible"  >
                <winf:PropertyGrid x:Name="PropertyGrid2" Height="200"   >
                </winf:PropertyGrid>
            </WindowsFormsHost>
            <DockPanel Grid.Row="0"  >
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="GridListHeader0" Grid.Column="0">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="形状" Margin="10,0,0,0"/>
                    </Grid>
                    <Grid x:Name="GridListHeader1" Grid.Column="1">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="序号" Margin="10,0,0,0"/>
                    </Grid>
                    <GridSplitter Grid.Column="0" Width="2"  Background="AliceBlue"/>
                    <Grid x:Name="GridListHeader2" Grid.Column="2">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="选中" Margin="10,0,0,0" />
                    </Grid>
                    <GridSplitter Grid.Column="1" Width="2"  Background="AliceBlue"/>
                    <Grid x:Name="GridListHeader3" Grid.Column="3">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="位置"  Margin="10,0,0,0"/>
                    </Grid>
                    <GridSplitter Grid.Column="2" Width="2"  Background="AliceBlue"/>
                    <Grid x:Name="GridListHeader4" Grid.Column="4">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="角度"  Margin="10,0,0,0" />
                    </Grid>
                </Grid>
                <Grid>
                    <Grid.Resources>
                        <DataTemplate x:Key="DrawingVisualCircleTemplate" DataType="{x:Type draw:DrawingVisualCircle}" >
                            <StackPanel  Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static resx:Resources.Delete}" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="圆形" HorizontalAlignment="Center"/>
                                <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}" Tag="{Binding .}"/>
                                <TextBlock Width="{Binding ElementName=GridListHeader3,Path=ActualWidth}" HorizontalAlignment="Center">
                                                    <Run Text="{Binding Path = CenterX,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = CenterY,StringFormat={}{0:F0}}"/>
                                </TextBlock>
                                <TextBlock  Width="{Binding ElementName=GridListHeader4,Path=ActualWidth}" Text="{Binding Path=Radius}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="DrawingVisualRectangleTemplate"  DataType="{x:Type draw:DrawingVisualRectangle}">
                            <StackPanel  Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static resx:Resources.Delete}" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <TextBlock Width="{Binding ElementName=GridListHeader0,Path=ActualWidth}" Text="矩形" HorizontalAlignment="Center"/>
                                <TextBlock Width="{Binding ElementName=GridListHeader1,Path=ActualWidth}" Text="{Binding Attribute.ID}" HorizontalAlignment="Center"/>
                                <CheckBox Width="{Binding ElementName=GridListHeader2,Path=ActualWidth}" IsChecked="{Binding Attribute.IsShow}" Tag="{Binding .}"/>
                                <TextBlock>
                                            <Run Text="{Binding Attribute.Rect.X,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Y,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Width,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Height,StringFormat={}{0:F0}}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                        <converter:DrawCanvasTemplateSelector x:Key="DrawCanvasTemplateSelector"  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}"  DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
                    </Grid.Resources>
                    <ListView  x:Name="ListView1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemTemplateSelector="{StaticResource  DrawCanvasTemplateSelector}" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback" PreviewKeyDown="ListView1_PreviewKeyDown"  SelectionChanged="ListView1_SelectionChanged" >

                    </ListView>

                </Grid>
            </DockPanel>
        </Grid>
        <Grid x:Name="ZoomGrid"  Grid.Column="0" Background="#c3c3c3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="0.5" Background="#BCBCBC"/>
            <draw:ZoomboxSub x:Name="Zoombox1"  MaxZoom="10"  MinZoom="0.01" Grid.Row="1" Grid.RowSpan="2">
                <draw:DrawCanvas x:Name="ImageShow"  Initialized="ImageShow_Initialized" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  PreviewMouseLeftButtonDown="ImageShow_MouseDown"  PreviewMouseRightButtonDown="ImageShow_PreviewMouseRightButtonDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove"/>
            </draw:ZoomboxSub>

            <ToolBarTray x:Name="ToolBar1"  DockPanel.Dock="Top" DataContext="{Binding ToolBarTop}" Orientation="Horizontal" VerticalAlignment="Top" Grid.Row="0" Grid.RowSpan="2"  HorizontalAlignment="Center">
                <ToolBar Style="{StaticResource ToolBarBaseStyle}"  Margin="0,2,4,0"  ToolBarTray.IsLocked="True" >
                    <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding ImageEditMode}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagedrag}" Margin="-5"/>
                    </ToggleButton>
                    <ToggleButton x:Name="ToggleButtonMouse"  IsChecked="{Binding ShowImageInfo}" >
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMouse}"  Margin="-5"/>
                    </ToggleButton>
                    <Button Command="{Binding ZoomUniform}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImage1_1}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding ZoomIncrease}"  Margin="1,0">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagezoom_in}"   Margin="-5"/>
                    </Button>
                    <Button  Command="{Binding ZoomDecrease}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagezoom_out}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding RotateLeftCommand}" Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DIToolRotalLeftIcon}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding RotateRightCommand}" Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DIToolRotalRightIcon}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding ZoomNone}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageexpend}"  Margin="-5"/>
                    </Button>
                    <ToggleButton Command="{Binding MaxCommand}" Margin="1,0" >
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMax}"  Margin="-5"/>
                    </ToggleButton>
                    <TextBox  Background="Transparent" BorderThickness="1"  HorizontalContentAlignment="Center"  Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:P1}}" />
                    <Button   Command="{Binding OpenProperty}" Margin="1,0">
                        <TextBlock Text="&#xE713;" FontFamily="Segoe MDL2 Assets" Margin="-5" FontSize="15" Foreground="{DynamicResource GlobalTextBrush}"/>
                    </Button>

                    <Button x:Name="reference"  Click="reference_Click" Margin="1,0" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource ConcentricCirclesDrawImg}"  Margin="-5"/>
                    </Button>
                    <Popup x:Name="menuPop1" StaysOpen="False" Margin="0" PlacementTarget="{Binding ElementName=reference}" AllowsTransparency="True">
                        <StackPanel Margin="0">
                            <Button Content="无" Click="reference1_Click" Width="80" Tag="-1"/>
                            <Button Content="十字准线" Click="reference1_Click" Width="80" Tag="2"/>
                            <Button Content="同心圆" Click="reference1_Click" Width="80" Tag="0"/>
                            <Button Content="单十字准线" Click="reference1_Click" Width="80"  Tag="1"/>
                        </StackPanel>
                    </Popup>
                    <ToggleButton IsChecked="{Binding Gridline.IsShow}" >
                        <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIGridlines}"  Margin="-5"/>
                    </ToggleButton>
                    <ToggleButton  IsChecked="{Binding Measure}" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                        <Image  Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageruler}"  Margin="-5"/>
                    </ToggleButton>
                    <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" Click="Button7_Click" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageeraser}"  Margin="-5"/>
                    </ToggleButton>

                    <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageCircle}"  Margin="-5"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0" Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}">
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageRect}"  Margin="-5"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawPolygon}"  Visibility="{Binding ImageEditMode,Converter={StaticResource bool2VisibilityConverter}}"  >
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImagePolygon}"  Margin="-5"/>
                    </ToggleButton>
                </ToolBar>
                
            </ToolBarTray>
            <ToolBarTray x:Name="ToolBar2"  DockPanel.Dock="Left" DataContext="{Binding ToolBarTop}" Orientation="Vertical" Margin="0,30,0,0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top">
                <ToolBar ToolBarTray.IsLocked="True" >
                    <Button Click="Button_Click">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource openDrawingImage}" Margin="-5"/>
                    </Button>
                    <Button Command="{Binding SaveImageCommand}">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageSave}"  Margin="-5"/>
                    </Button>
                    <Button Command="{Binding ClearImageCommand}">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DrawingImageClear}"  Margin="-5"/>
                    </Button>
                    <Button x:Name="ButtonCIE1931"  Visibility="{Binding CIEVisible}" Click="ButtonCIE1931_Click">
                        <Image  Style="{StaticResource ToolBarImage}"  Source="/ColorVision.Engine;component/Assets/Image/CIE1931xy1.png" Margin="-5"/>
                    </Button>
                    <Button x:Name="HistogramButton"  Visibility="{Binding PseudoVisible}" Click="HistogramButton_Click">
                        <Image Style="{StaticResource ToolBarImage}"  Source="{DynamicResource DIHistogram}"  Margin="-5"/>
                    </Button>

                    <ToggleButton x:Name="Pseudo"  Visibility="{Binding PseudoVisible}" Click="ToggleButton_Click">
                        <Image Style="{StaticResource ToolBarImage}"   Source="/ColorVision.Engine;component/Assets/png/PowerToy.png" Margin="-5"/>
                    </ToggleButton>

                    <Grid Width="20" Margin="5,0" HorizontalAlignment="Left">
                        <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="15" Foreground="{DynamicResource GlobalTextBrush}"/>
                        <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Tag="Calibration"  Click="Pseudo_MouseDoubleClick"/>
                    </Grid>
                    <Grid  Height="200" Visibility="{Binding ElementName=Pseudo,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Width="28" Text="{Binding ValueEnd, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}"  Background="Transparent"  BorderThickness="0"  HorizontalContentAlignment="Center" />
                        <TextBox Grid.Row="2" Width="28" Text="{Binding ValueStart, ElementName=PseudoSlider, StringFormat=#0}" Style="{StaticResource BaseStyle}" Background="Transparent"  BorderThickness="0" HorizontalContentAlignment="Center"/>
                        <Grid Grid.Row="1"   Width="18">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"  x:Name="RowDefinitionStart"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="0"  x:Name="RowDefinitionEnd"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="White" CornerRadius="10,10,0,0"/>
                            <Border Grid.Row="1"  Background="Transparent">
                                <Image Source="/Assets/Image/pictureBox1.Image.png" Stretch="Fill" VerticalAlignment="Top"/>
                            </Border>
                            <Border Grid.Row="2" Background="Black" CornerRadius="0,0,10,10 "/>
                        </Grid>
                        <hc:RangeSlider Grid.Row="1"  x:Name="PseudoSlider" FocusVisualStyle="{x:Null}"  Style="{StaticResource RangeSliderBaseStyle}" Background="Transparent" hc:TipElement.Visibility="Visible" hc:TipElement.Placement="Left" hc:TipElement.StringFormat="#0" ValueEnd="255"  Maximum="255" ValueStart="0"  Minimum="0" Orientation="Vertical" HorizontalAlignment="Center" />
                    </Grid>


                </ToolBar>
            </ToolBarTray>

            <Border x:Name="BorderPropertieslayers" Background="#22000000" Visibility="Collapsed" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Top" Margin="0,60,20,0" HorizontalAlignment="Right"  Height="50" Width="150" CornerRadius="10" >
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding ElementName=ImageShow,Path=Source.Width}" Foreground="White" HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding ElementName=ImageShow,Path=Source.Height}" Foreground="White"  HorizontalAlignment="Center" />
                </StackPanel>
            </Border>
        </Grid>
    </Grid>

</UserControl>
