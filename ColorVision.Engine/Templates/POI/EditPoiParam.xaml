<Window x:Class="ColorVision.Engine.Services.Templates.POI.EditPoiParam"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ColorVision.Engine.Templates.POI"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converter="clr-namespace:ColorVision.Engine.Draw.Converter"
        xmlns:base="clr-namespace:ColorVision.Themes.Controls;assembly=ColorVision.Themes"
        xmlns:draw ="clr-namespace:ColorVision.Engine.Draw"
        xmlns:winf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:properties="clr-namespace:ColorVision.Engine.Properties"
        xmlns:poifix ="clr-namespace:ColorVision.Engine.Services.Templates.POI.POIFix"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:PoiParam}"
        Title="关注点编辑"  Height="1080" Width="1920" WindowState="Maximized" Initialized="Window_Initialized">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox.Small}">
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
            <EventSetter Event="PreviewTextInput" Handler="TextBox_PreviewTextInput"/>
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="Foreground" Value="{DynamicResource GlobalTextBrush}"/>
        </Style>
        <Style x:Key="BorderModuleArea" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="4,1"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1"  Background="{DynamicResource GlobalBackground}">
            <Grid.RowDefinitions>
                <RowDefinition  Height="auto"/>
                <RowDefinition  Height="auto"/>
                <RowDefinition  Height="auto"/>
                <RowDefinition  Height="*"/>
            </Grid.RowDefinitions>
            <Border Margin="5,5,5,0" Style="{StaticResource BorderModuleArea}"  CornerRadius="5">
                <StackPanel Margin="3">
                    <DockPanel Margin="0,3">
                        <Grid x:Name="SettingGrid" DockPanel.Dock="Right" Width="20" Margin="5,0" HorizontalAlignment="Left" Grid.Column="0">
                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="20" Foreground="{DynamicResource GlobalTextBrush}"/>
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Click="Button_Setting_Click" />
                        </Grid>
                        <Popup  x:Name="SettingPopup" AllowsTransparency="true" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false" PlacementTarget="{Binding ElementName=SettingGrid}">
                            <Border Margin="5" Style="{StaticResource BorderModuleArea}">
                                <StackPanel Margin="0,5">
                                    <DockPanel x:Name="SettingGroup" Height="25" Margin="2">
                                        <ToggleButton  HorizontalAlignment="Left"  Margin="0,0,2,0" Style="{StaticResource ToggleButtonSwitch.Small}" IsChecked="{Binding PoiConfig.IsLayoutUpdated}"/>
                                        <TextBlock HorizontalAlignment="Left" Text="缩放自动重渲染"/>
                                    </DockPanel>
                                    <DockPanel Margin="2">
                                        <ToggleButton  HorizontalAlignment="Left"  Height="16" Margin="0,0,2,0"  Style="{StaticResource ToggleButtonSwitch}" IsChecked="{Binding PoiConfig.IsShowText}"/>
                                        <TextBlock   HorizontalAlignment="Left" Text="不显示文字"/>
                                    </DockPanel>
                                    <DockPanel Margin="2">
                                        <ToggleButton  HorizontalAlignment="Left"  Height="16" Margin="0,0,2,0"  Style="{StaticResource ToggleButtonSwitch}"  Click="SetDefault_Click" IsChecked="{Binding PoiConfig.IsShowDatum}"/>
                                        <TextBlock   HorizontalAlignment="Left" Text="基准点显示"/>
                                    </DockPanel>
                                    <DockPanel  Margin="2" >
                                        <ToggleButton HorizontalAlignment="Left" Height="16" Margin="0,0,2,0"  Style="{StaticResource ToggleButtonSwitch}"  Click="ShowPoiConfig_Click" IsChecked="{Binding PoiConfig.IsShowPoiConfig}"/>
                                        <TextBlock   HorizontalAlignment="Left" Text="布点区域显示"/>
                                    </DockPanel>
                                </StackPanel>
                            </Border>
                        </Popup>

                        <DockPanel  Margin="5,0">
                            <TextBlock Text="Width" MinWidth="25" Margin="0,0,5,0"/>
                            <TextBox x:Name="TextBoxCADW" Text="{Binding Width}" Width="55" />
                        </DockPanel>
                        <DockPanel  Margin="5,0"  HorizontalAlignment="Left">
                            <TextBlock Text="Height" MinWidth="25" Margin="0,0,5,0"/>
                            <TextBox x:Name="TextBoxCADH"  Text="{Binding Height}" Width="55" />
                        </DockPanel>
                    </DockPanel>
                    <StackPanel  Orientation="Horizontal" Margin="0,2">
                        <Button  Content="默认画布" DockPanel.Dock="Right" Click="CreateImage_Click"  Style="{StaticResource ButtonDefault.Small}" Margin="2,0" />
                        <Button x:Name="button1" Content="图像导入" HorizontalAlignment="Left"   Style="{StaticResource ButtonDefault.Small}"  Click="Button1_Click" Margin="2,0"/>
                        <Button x:Name="button4" Content="导入服务最新的图像" Click="Service_Click"  Style="{StaticResource ButtonDefault.Small}" Margin="2,0" />
                    </StackPanel>


                    <DockPanel Margin="0,2" >

                        <Button DockPanel.Dock="Right" Margin="2,0" Content="{x:Static properties:Resources.Import}" Click="Button_Service_Click"/>
                        <Button DockPanel.Dock="Right" Margin="2,0"   Content="{x:Static properties:Resources.Refresh}" Click="Button_RefreshImg_Click"/>
                        <ComboBox x:Name="ComboBoxImg"  Margin="2,0"  Style="{StaticResource ComboBox.Small}"/>
                    </DockPanel>
                    <DockPanel Margin="0,2">
                        <TextBlock Text="保存到文件"/>
                        <ToggleButton  HorizontalAlignment="Left"  Margin="0,0,2,0" Style="{StaticResource ToggleButtonSwitch.Small}" IsChecked="{Binding PoiConfig.IsPoiCIEFile}"/>
                    </DockPanel>
                    <DockPanel Visibility="{Binding  PoiConfig.IsPoiCIEFile,Converter={StaticResource bool2VisibilityConverter}}">
                        <Grid Width="20" Margin="5,0" DockPanel.Dock="Right" >
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Command="{Binding PoiConfig.OpenPoiCIEFileCommand}"/>
                            <TextBlock Text="&#xED25;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="15" Foreground="{DynamicResource GlobalTextBrush}"/>
                        </Grid>
                        <Button x:Name="button6" DockPanel.Dock="Right"  Content="保存" Click="SaveFile_Click" Margin="2,0" />
                        <Button DockPanel.Dock="Right"  Content="..." Command="{Binding PoiConfig.SetPoiFileCommand}" Margin="2,0" />
                        <TextBox Margin="2,0" BorderThickness="1" Text="{Binding PoiConfig.PoiCIEFileName}"/>
                    </DockPanel>
                    <StackPanel Margin="2"  Orientation="Horizontal" Visibility="{Binding  PoiConfig.IsPoiCIEFile,Converter={StaticResource bool2VisibilityConverter}}">
                        <TextBlock Text="半径:" Width="40"/>
                        <TextBox Text="{Binding PoiConfig.Thickness}"  Width="55"  />
                    </StackPanel>
                    <StackPanel  Margin="2" Orientation="Horizontal">
                        <Button  ToolTip="保存关注点" Click="Button_Save_Click" HorizontalAlignment="Right" Margin="0,0,5,0">
                            <Image Source="{StaticResource DrawingImageSave}" Height="20" />
                        </Button>
                        <Button x:Name="button3" ToolTip="清空关注点" Click="Button3_Click" HorizontalAlignment="Right">
                            <Image Source="{StaticResource DrawingImageClear}" Height="20"/>
                        </Button>
                        <Button Content="重渲染" Margin="5,0,0,0" ToolTip="一次"  Click="Button_UpdateVisualLayout_Click"  DockPanel.Dock="Right" Visibility="{Binding PoiConfig.IsLayoutUpdated ,Converter={StaticResource bool2VisibilityConverter1}}" />
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="1"  Style="{StaticResource BorderModuleArea}"  CornerRadius="5" Margin="5,5,5,0">
                <StackPanel Margin="2">
                    <StackPanel Margin="0,2" Orientation="Horizontal">
                        <TextBlock DockPanel.Dock="Left" Margin="2,0" Text="均值合规模板" Width="80"/>
                        <ComboBox x:Name="ComboBoxValidate" SelectedValue="{Binding ValidateId}" Width="90" SelectedValuePath="Id" DisplayMemberPath="Key" Margin="2,0" Style="{StaticResource ComboBox.Small}"/>
                        <Grid Width="20" Margin="5,0"  DockPanel.Dock="Right">
                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Tag="FocusParm" Command="{Binding ValidateCIEAVGCommand}"/>
                        </Grid>
                    </StackPanel>
                    <DockPanel Margin="0,2" >
                        <TextBlock DockPanel.Dock="Left" Margin="2,0" Text="合规模板" Width="80"/>
                        <ComboBox x:Name="ComboBoxValidateCIE" Width="90"  SelectedValue="{Binding PoiConfig.DeafultValidateCIEId}"  SelectedValuePath="Id" DisplayMemberPath="Key" Margin="2,0" Style="{StaticResource ComboBox.Small}"/>
                        <Grid Width="20" Margin="5,0">
                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Tag="FocusParm" Command="{Binding PoiConfig.ValidateCIECommand}"/>
                        </Grid>
                        <Button DockPanel.Dock="Right" Margin="2,0" Content="应用全部" Click="Button_Click_4"/>
                    </DockPanel>
                    <StackPanel Margin="0,2" Orientation="Horizontal">
                        <TextBlock DockPanel.Dock="Left" Margin="2,0" Text="PoiFix" Width="80"/>
                        <ComboBox x:Name="ComboBoxPoiFix" SelectedValue="{Binding PoiConfig.PoiFixId}" SelectionChanged="ComboBoxPoiFix_SelectionChanged" Width="90" SelectedValuePath="Id" DisplayMemberPath="Key" Margin="2,0" Style="{StaticResource ComboBox.Small}"/>
                        <Grid Width="20" Margin="5,0"  DockPanel.Dock="Right">
                            <TextBlock Text="&#xE713;"  HorizontalAlignment="Center" FontFamily="Segoe MDL2 Assets" FontSize="15"  Foreground="{DynamicResource GlobalTextBrush}"/>
                            <Button  Width="20" BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Tag="FocusParm" Command="{Binding PoiConfig.TemplatePoiFixCommand}"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel x:Name="PoiFixStackPanel" d:DataContext="{d:DesignInstance poifix:PoiFixParam}" >
                        <StackPanel Orientation="Horizontal" Margin="0,2" >
                            <TextBlock DockPanel.Dock="Left" Margin="2,0" Text="PoiFixFilePath" Width="80"/>
                            <TextBox Text="{Binding PoiFixFilePath}" Margin="2,0"  Width="90"/>
                            <Button DockPanel.Dock="Right" Margin="2,0" Content="设置" Click="PoiFix_Create_Click"/>
                        </StackPanel>
                        
                    </StackPanel>
                    
                </StackPanel>
            </Border>

            <ScrollViewer x:Name="ScrollViewer1" Grid.Row="3" Margin="5,5,5,0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="0" Grid.Row="0" >
                    <ToggleButton x:Name="PoiConfigToggleButton" Margin="0,5" Content="基准点设置" Style="{StaticResource ButtonPageControl1}" IsChecked="False" HorizontalAlignment="Left"/>
                    <Border  Style="{StaticResource BorderModuleArea}" Margin="0,0,0,5" CornerRadius="5">
                        <StackPanel x:Name="StackPanelPoiConfigPoints" Margin="5"  Visibility="{Binding ElementName=PoiConfigToggleButton,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                            <DockPanel  Margin="2" HorizontalAlignment="Left">
                                <TextBlock Text="X1"   MinWidth="40"/>
                                <TextBox Text="{Binding PoiConfig.X1X}" Width="80" Margin="5,0" />
                                <TextBox Text="{Binding PoiConfig.X1Y}" Width="80" Margin="5,0"   />
                            </DockPanel>
                            <DockPanel  Margin="2"  HorizontalAlignment="Left">
                                <TextBlock Text="X2"  MinWidth="40"/>
                                <TextBox  Text="{Binding PoiConfig.X2X}" Width="80" Margin="5,0"  />
                                <TextBox   Text="{Binding PoiConfig.X2Y}" Width="80" Margin="5,0"  />
                            </DockPanel>
                            <DockPanel  Margin="2"  HorizontalAlignment="Left">
                                <TextBlock  Text="X3"  MinWidth="40" />
                                <TextBox  Text="{Binding PoiConfig.X3X}" Width="80" Margin="5,0"  />
                                <TextBox   Text="{Binding PoiConfig.X3Y}" Width="80" Margin="5,0"  />
                            </DockPanel>

                            <DockPanel  Margin="2"  HorizontalAlignment="Left">
                                <TextBlock Text="X4"   MinWidth="40"/>
                                <TextBox  Text="{Binding PoiConfig.X4X}" Width="80" Margin="5,0"  />
                                <TextBox   Text="{Binding PoiConfig.X4Y}" Width="80" Margin="5,0"  />
                            </DockPanel>
                            <DockPanel  Margin="2"  HorizontalAlignment="Left">
                                <TextBlock Text="中心点"  MinWidth="40"/>
                                <TextBox  Text="{Binding PoiConfig.CenterX}" Width="80" Margin="5,0"  />
                                <TextBox  Text="{Binding PoiConfig.CenterY}" Width="80" Margin="5,0"  />
                            </DockPanel>
                            <StackPanel  Margin="0,5" Orientation="Horizontal" >
                                <RadioButton x:Name="RadioButtonBuildMode1" Width="80" Content="手动添加"  IsChecked="True" />
                                <RadioButton x:Name="RadioButtonBuildMode2" Width="80"  Content="边距计算"  />
                                <RadioButton x:Name="RadioButtonBuildMode3" Width="80"  Content="自动计算"  />
                            </StackPanel>
                            <Button Content="设置基准点"  Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Visibility="{Binding ElementName=RadioButtonBuildMode1, Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" Click="SetDefault_Click"/>
                            <StackPanel  Margin="5"  Visibility="{Binding ElementName=RadioButtonBuildMode2, Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}">
                                <UniformGrid Columns="2" >
                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                        <TextBlock VerticalAlignment="Center"  Text="上:" Width="30"/>
                                        <TextBox  x:Name="TextBoxUp" Text="10" Margin="5,0" MinWidth="55" PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                    </DockPanel>
                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                        <TextBlock  VerticalAlignment="Center"  Text="左:" Width="30"/>
                                        <TextBox   x:Name="TextBoxLeft" Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                    </DockPanel>
                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                        <TextBlock  VerticalAlignment="Center"  Text="下:" Width="30"/>
                                        <TextBox  x:Name="TextBoxDown"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                    </DockPanel>
                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                        <TextBlock VerticalAlignment="Center"  Text="右:" Width="30"/>
                                        <TextBox  x:Name="TextBoxRight"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                    </DockPanel>
                                </UniformGrid>
                                <ComboBox x:Name="ComboBoxBorderType" HorizontalAlignment="Left"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="0,0,6,0"/>
                                <Button Content="设置基准点" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="SetDefault_Click"/>
                            </StackPanel>
                            <StackPanel Margin="5"  Visibility="{Binding ElementName=RadioButtonBuildMode3, Path=IsChecked,Converter={StaticResource bool2VisibilityConverter}}" >
                                <DockPanel Margin="2" >
                                    <TextBlock Text="阈值" Width="30"/>
                                    <TextBox   Text="3" />
                                </DockPanel>
                                <Button Content="设置基准点" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="SetDefault_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <Border Margin="0" Style="{StaticResource BorderModuleArea}"  CornerRadius="0,0,5,5">
                        <TabControl Background="Transparent">
                            <TabItem Header="配置参数">
                                <StackPanel >
                                    <DockPanel>
                                        <ToggleButton  HorizontalAlignment="Left"  Height="16" Margin="2" Style="{StaticResource ToggleButtonSwitch}"  Click="SetDefault_Click" IsChecked="{Binding PoiConfig.IsUserDraw}"/>
                                        <TextBlock  HorizontalAlignment="Left" Text="使用绘图添加"/>
                                    </DockPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                        <RadioButton x:Name="RadioButtonAreaCircle" GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaCircle}" Width="60" Content="圆"/>
                                        <RadioButton x:Name="RadioButtonAreaRect"  GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaRect}" Width="60" Content="矩形"/>
                                        <RadioButton x:Name="RadioButtonAreaMask"  GroupName="shapeArea"   Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaMask}" Width="70" Content="四边形"/>
                                        <RadioButton x:Name="RadioButtonAreaPolygon"  GroupName="shapeArea"  Checked="RadioButtonArea_Checked" IsChecked="{Binding PoiConfig.IsAreaPolygon}" Width="60" Content="折线"/>
                                    </StackPanel>
                                    <StackPanel>
                                        <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaCircle,Converter={StaticResource bool2VisibilityConverter}}">
                                            <DockPanel  Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="中心点"  MinWidth="50"/>
                                                <TextBox  Text="{Binding PoiConfig.CenterX}" Width="55"  />
                                                <TextBox  Text="{Binding PoiConfig.CenterY}" Width="55" Margin="5,0"  />
                                            </DockPanel>
                                            <DockPanel  Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="半径:" MinWidth="50"/>
                                                <TextBox  x:Name="TextBoxAreaCircleR" Width="55" Text="{Binding PoiConfig.AreaCircleRadius}"  BorderThickness="0,0,0,1"  PreviewTextInput="TextBox_PreviewTextInput"/>
                                            </DockPanel>
                                            <UniformGrid Columns="2">
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="数量:" MinWidth="50"/>
                                                    <TextBox x:Name="tbNum" Width="55" Text="{Binding PoiConfig.AreaCircleNum}"  />
                                                </DockPanel>
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="角度:"  MinWidth="50"/>
                                                    <TextBox x:Name="tbAngle" Width="55" Text="{Binding PoiConfig.AreaCircleAngle}" />
                                                </DockPanel>
                                            </UniformGrid>

                                            <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                        </StackPanel>
                                        <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaRect,Converter={StaticResource bool2VisibilityConverter}}">
                                            <DockPanel  Margin="2" HorizontalAlignment="Left">
                                                <TextBlock Text="中心点"  MinWidth="50"/>
                                                <TextBox  Text="{Binding PoiConfig.CenterX}" Width="55"  />
                                                <TextBox  Text="{Binding PoiConfig.CenterY}" Width="55" Margin="5,0"  />
                                            </DockPanel>
                                            <UniformGrid  Columns="2">
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="宽度:" MinWidth="50"/>
                                                    <TextBox x:Name="tbWidth"  Width="55" Text="{Binding PoiConfig.AreaRectWidth}"  />
                                                </DockPanel>
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="高度:" MinWidth="50"/>
                                                    <TextBox x:Name="tbHeight" Width="55"  Text="{Binding PoiConfig.AreaRectHeight}" />
                                                </DockPanel>
                                            </UniformGrid>
                                            <UniformGrid  Columns="2" >
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="行数:"  MinWidth="50"/>
                                                    <TextBox x:Name="tbX"  Width="55" Text="{Binding PoiConfig.AreaRectRow}"  />
                                                </DockPanel>
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="列数:" MinWidth="50"/>
                                                    <TextBox x:Name="tbY" Width="55" Text="{Binding PoiConfig.AreaRectCol}" />
                                                </DockPanel>
                                            </UniformGrid>

                                            <Grid>
                                                <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                                <StackPanel  HorizontalAlignment="Right">
                                                    <Button x:Name="ButtonImportMarin1" Content="边距计算" Margin="3" Height="25" Click="ButtonImportMarin1_Click"/>
                                                    <Popup  x:Name="ImportMarinPopup1" AllowsTransparency="true" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false" PlacementTarget="{Binding ElementName=ButtonImportMarin1}">
                                                        <Border  Style="{StaticResource BorderModuleArea}" Background="{DynamicResource SecondaryRegionBrush}" Width="150" CornerRadius="5">
                                                            <StackPanel Margin="5">
                                                                <UniformGrid Columns="2" >
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock VerticalAlignment="Center"  Text="上:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxUp2" Text="10" Margin="5,0" MinWidth="55" PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock  VerticalAlignment="Center"  Text="左:" Width="20"/>
                                                                        <TextBox   x:Name="TextBoxLeft2" Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock  VerticalAlignment="Center"  Text="下:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxDown2"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock VerticalAlignment="Center"  Text="右:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxRight2"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                </UniformGrid>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <ComboBox x:Name="ComboBoxBorderType11" HorizontalAlignment="Left"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="0,0,6,0"/>
                                                                    <Button Content="设置" Click="ButtonImportMarinSetting2"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                        <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaMask,Converter={StaticResource bool2VisibilityConverter}}">
                                            <Grid>
                                                <StackPanel>
                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                        <TextBlock Text="X1"   MinWidth="20"/>
                                                        <TextBox Text="{Binding PoiConfig.Polygon1X}" Width="55" Margin="5,0" />
                                                        <TextBox   Text="{Binding PoiConfig.Polygon1Y}" Width="55" Margin="5,0"   />
                                                    </DockPanel>
                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                        <TextBlock Text="X2"  MinWidth="20"/>
                                                        <TextBox  Text="{Binding PoiConfig.Polygon2X}" Width="55" Margin="5,0"  />
                                                        <TextBox   Text="{Binding PoiConfig.Polygon2Y}" Width="55" Margin="5,0"  />
                                                    </DockPanel>
                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                        <TextBlock  Text="X3"  MinWidth="20" />
                                                        <TextBox  Text="{Binding PoiConfig.Polygon3X}" Width="55" Margin="5,0"  />
                                                        <TextBox   Text="{Binding PoiConfig.Polygon3Y}" Width="55" Margin="5,0"  />
                                                    </DockPanel>
                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                        <TextBlock Text="X4"   MinWidth="20"/>
                                                        <TextBox  Text="{Binding PoiConfig.Polygon4X}" Width="55" Margin="5,0"  />
                                                        <TextBox   Text="{Binding PoiConfig.Polygon4Y}" Width="55" Margin="5,0"  />
                                                    </DockPanel>
                                                </StackPanel>
                                                <StackPanel  HorizontalAlignment="Right">
                                                    <Button Content="从基准点导入" Margin="3" Height="25" Click="PoiConfigImport_Click"/>
                                                    <Button x:Name="ButtonImportMarin" Content="边距计算" Margin="3" Height="25" Click="ButtonImportMarin_Click"/>
                                                    <Popup  x:Name="ImportMarinPopup" AllowsTransparency="true" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false" PlacementTarget="{Binding ElementName=ButtonImportMarin}">
                                                        <Border  Style="{StaticResource BorderModuleArea}" Background="{DynamicResource SecondaryRegionBrush}" Width="150" CornerRadius="5">
                                                            <StackPanel Margin="5">
                                                                <UniformGrid Columns="2" >
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock VerticalAlignment="Center"  Text="上:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxUp1" Text="10" Margin="5,0" MinWidth="55" PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock  VerticalAlignment="Center"  Text="左:" Width="20"/>
                                                                        <TextBox   x:Name="TextBoxLeft1" Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock  VerticalAlignment="Center"  Text="下:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxDown1"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                    <DockPanel Margin="2" HorizontalAlignment="Left">
                                                                        <TextBlock VerticalAlignment="Center"  Text="右:" Width="20"/>
                                                                        <TextBox  x:Name="TextBoxRight1"  Text="10" Margin="5,0" MinWidth="55"  PreviewTextInput="TextBox_PreviewTextInput" BorderThickness="0,0,0,1"/>
                                                                    </DockPanel>
                                                                </UniformGrid>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <ComboBox x:Name="ComboBoxBorderType1" HorizontalAlignment="Left"  Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="0,0,6,0"/>
                                                                    <Button Content="设置" Click="ButtonImportMarinSetting"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </StackPanel>

                                            </Grid>

                                            <UniformGrid  Columns="2" >
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="行数:"   MinWidth="50"/>
                                                    <TextBox  Text="{Binding PoiConfig.AreaPolygonRow}" Width="55"  />
                                                </DockPanel>
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="列数:"  MinWidth="50"/>
                                                    <TextBox  Text="{Binding PoiConfig.AreaPolygonCol}" Width="55" />
                                                </DockPanel>
                                            </UniformGrid>
                                            <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                        </StackPanel>
                                        <StackPanel  Margin="5" Visibility="{Binding PoiConfig.IsAreaPolygon,Converter={StaticResource bool2VisibilityConverter}}">
                                            <ListView  x:Name="ListViewPolygon"  MaxHeight="200" Style="{StaticResource ListView.Small}" ItemsSource="{Binding PoiConfig.Polygons}" Grid.Column="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" PreviewKeyDown="ListView1_PreviewKeyDown" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback" >
                                                <ListView.Resources>
                                                    <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" >
                                                    </ContextMenu>
                                                </ListView.Resources>
                                                <ListView.View >
                                                    <GridView >
                                                        <GridView.ColumnHeaderContainerStyle>
                                                            <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource  InputElementBaseStyle}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                                                <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                                                            </Style>
                                                        </GridView.ColumnHeaderContainerStyle>
                                                        <GridViewColumn Header="显示">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                                    <TextBlock Text="{Binding .}"/>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="显示">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                                    <Button Content="删除" Click="Button_Click" Tag="{Binding .}"/>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="显示" Width="70">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate DataType="{x:Type local:PolygonPoint}">
                                                                    <TextBox Text="{Binding SplitNumber}" HorizontalContentAlignment="Center" Width="50"/>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        

                                                    </GridView>
                                                </ListView.View>
                                            </ListView>



                                            <UniformGrid  Columns="2" >
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <TextBlock Text="设定分割"   MinWidth="70"/>
                                                    <TextBox Text="{Binding PoiConfig.AreaPolygonLenNum}" Width="55"/>
                                                </DockPanel>
                                                <DockPanel Margin="2" HorizontalAlignment="Left">
                                                    <ToggleButton  HorizontalAlignment="Left"  Height="16" Margin="2" Style="{StaticResource ToggleButtonSwitch}"  Click="SetDefault_Click" IsChecked="{Binding PoiConfig.AreaPolygonUsNode}"/>
                                                    <TextBox  Text="是否使用结点" />
                                                </DockPanel>
                                            </UniformGrid>
                                            <Button Content="设置布点区域" Margin="3" Height="25" FontWeight="Bold" HorizontalAlignment="Left" Click="ShowPoiConfig_Click"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                        <RadioButton x:Name="RadioButtonCircle" Width="60"  GroupName="shape" IsChecked="{Binding IsPointCircle}" Content="圆形"/>
                                        <RadioButton x:Name="RadioButtonRect" Width="60"  GroupName="shape" IsChecked="{Binding IsPointRect}" Content="矩形"/>
                                    </StackPanel>

                                    <StackPanel Margin="5" Visibility="{Binding IsPointCircle,Converter={StaticResource bool2VisibilityConverter}}" >
                                        <DockPanel Margin="2"  HorizontalAlignment="Left">
                                            <TextBlock Text="半径:" Width="40"/>
                                            <TextBox  Text="{Binding PoiConfig.DefaultCircleRadius}" Width="55" />
                                        </DockPanel>
                                    </StackPanel>
                                    <StackPanel Margin="5" Visibility="{Binding IsPointRect,Converter={StaticResource bool2VisibilityConverter}}"  Orientation="Horizontal">
                                        <DockPanel Margin="2" >
                                            <TextBlock Text="宽度:" Width="40"/>
                                            <TextBox Text="{Binding PoiConfig.DefaultRectWidth}"  Width="55"  />
                                        </DockPanel>
                                        <DockPanel Margin="2" >
                                            <TextBlock Text="高度:" Width="40"/>
                                            <TextBox Text="{Binding PoiConfig.DefaultRectHeight}"  Width="55"  />
                                        </DockPanel>
                                    </StackPanel>
                                    <ComboBox x:Name="ComboBoxBorderType2"  Visibility="{Binding ElementName=RadioButtonAreaMask,Path=IsChecked,Converter={StaticResource bool2VisibilityConverter1}}" HorizontalAlignment="Left" Width="100" Style="{StaticResource ComboBox.Small}" SelectedValuePath="Key"  DisplayMemberPath="Value" Margin="5,3"/>
                                    <Button x:Name="button2" Margin="5"  Height="30" Width="100" FontWeight="Bold" HorizontalAlignment="Left"  Content="绘制" Click="Button2_Click"/>
                                </StackPanel>
                            </TabItem>
                            <TabItem Header="灯珠抓取">
                                <StackPanel Margin="5">
                                    <GroupBox x:Name="GridMark" Header="灯珠像素边长" Margin="5" >
                                        <StackPanel>
                                            <StackPanel  x:Name="StackPanelLedLen" d:DataContext="{d:DesignInstance local:PoiParam}" Margin="5">
                                                <UniformGrid Columns="2">
                                                    <DockPanel  Margin="2">
                                                        <TextBlock Text="上边长:" />
                                                        <TextBox  Text="{Binding PoiConfig.LedLen1}" />
                                                    </DockPanel>
                                                    <DockPanel Margin="2" >
                                                        <TextBlock Text="下边长:" />
                                                        <TextBox   Text="{Binding PoiConfig.LedLen2}" />
                                                    </DockPanel>
                                                    <DockPanel  Margin="2">
                                                        <TextBlock Text="左边长:" />
                                                        <TextBox  Text="{Binding PoiConfig.LedLen3}" />
                                                    </DockPanel>
                                                    <DockPanel Margin="2" >
                                                        <TextBlock Text="右边长:" />
                                                        <TextBox   Text="{Binding PoiConfig.LedLen4}" />
                                                    </DockPanel>
                                                </UniformGrid>
                                            </StackPanel>
                                        </StackPanel>
                                    </GroupBox>
                                    <Button Margin="2" Content="抓取" Click="Light_Draw_Click"/>
                                    <Button  Content="导入配置文件" Click="Button_Click_2"  Margin="1"/>
                                    <Button  Content="保存配置文件" Click="Button_Click_3"  Margin="1"/>
                                    <WindowsFormsHost Height="300" >
                                        <winf:PropertyGrid  x:Name="PropertyGridAutoFocus" />
                                    </WindowsFormsHost>
                                </StackPanel>
                            </TabItem>
                            <TabItem Header="导入布点">
                                <Button Margin="2" Content="导入" Click="Import_Draw_Click"/>
                            </TabItem>
                        </TabControl>
                    </Border>



                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Grid x:Name="ImageContentGrid" Grid.Column="0"  Background="#c3c3c3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <draw:ZoomboxSub x:Name="Zoombox1" >
                <draw:DrawCanvas x:Name="ImageShow" Initialized="ImageShow_Initialized" MouseLeave="ImageShow_MouseLeave"  MouseEnter="ImageShow_MouseEnter"  PreviewMouseLeftButtonDown="ImageShow_MouseDown"  PreviewMouseRightButtonDown ="ImageShow_PreviewMouseRightButtonDown"  PreviewMouseUp="ImageShow_MouseUp"  MouseWheel="ImageShow_MouseWheel" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.ClearTypeHint="Enabled" MouseMove="ImageShow_MouseMove"/>
            </draw:ZoomboxSub>
            <StackPanel Grid.Row="0" Grid.RowSpan="2" >
                <ToolBar x:Name="ToolBar1" d:DataContext="{d:DesignInstance draw:ToolBarTop}" Margin="0,2,4,0"  Background="#AAFFFFFF" ToolBarTray.IsLocked="True" HorizontalAlignment="Center">
                    <ToolBar.Resources>
                        <ResourceDictionary Source="/ColorVision.Themes;component/Themes/Icons.xaml"/>
                    </ToolBar.Resources>
                    <ToggleButton x:Name="ToggleButtonDrag" IsChecked="{Binding ImageEditMode}"  Margin="1,0" ToolTip="可以按下Ctrl缩放和移动图像">
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagedrag}"/>
                    </ToggleButton>
                    <Button Command="{Binding ZoomUniform}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImage1_1}"/>
                    </Button>
                    <Button Command="{Binding ZoomIncrease}"  Margin="1,0">
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_in}" />
                    </Button>
                    <Button  Command="{Binding ZoomDecrease}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagezoom_out}"/>
                    </Button>
                    <Button Command="{Binding ZoomNone}"  Margin="1,0">
                        <Image  Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageexpend}"/>
                    </Button>
                    <ToggleButton Command="{Binding MaxCommand}" Margin="1,0" >
                        <Image Style="{StaticResource ToolBarImage}" Source="{DynamicResource DrawingImageMax}"/>
                    </ToggleButton>
                    <TextBox   BorderThickness="1"  HorizontalContentAlignment="Center"  Text="{Binding ElementName=Zoombox1,Path=ContentMatrix.M11,StringFormat={}{0:P1}}" />
                    <Button Content="属性" Command="{Binding OpenProperty}" />
                    <ToggleButton  IsChecked="{Binding EraseVisual}" Margin="1,0" >
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageeraser}"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawCircle}" Margin="1,0">
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageCircle}"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawRect}" Margin="1,0">
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImageRect}"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding DrawPolygon}" Margin="1,0">
                        <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource DrawingImagePolygon}"/>
                    </ToggleButton>
                </ToolBar>
            </StackPanel>
            <Grid x:Name="FocusPointGrid" Visibility="Visible" Grid.Row="1" Height="300" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <WindowsFormsHost Grid.Column="0" Width="400" Height="300" x:Name="PropertyGrid21"  Visibility="Collapsed">
                    <winf:PropertyGrid  x:Name="PropertyGrid2" />
                </WindowsFormsHost>
                <ListView  x:Name="ListView1" VirtualizingPanel.IsVirtualizing="True"  VirtualizingPanel.VirtualizationMode="Recycling" Grid.Column="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" PreviewKeyDown="ListView1_PreviewKeyDown" ManipulationBoundaryFeedback="SCManipulationBoundaryFeedback"  SelectionChanged="ListView1_SelectionChanged" >
                    <ListView.Resources>
                        <ContextMenu x:Key="ContextMenuItem">
                            <MenuItem Header="{x:Static properties:Resources.Delete}"  Click="MenuItem_DrawingVisual_Delete" Tag="{Binding .}"  />
                        </ContextMenu>
                        <ContextMenu x:Key="ItemContextMenu" Opened="ContextMenu_Opened" >
                        </ContextMenu>
                        <DataTemplate x:Key="DrawingVisualCircleTemplate" DataType="{x:Type draw:DVCircle}" >
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock  HorizontalAlignment="Center">
                                                    <Run Text="{Binding Path = Attribute.Center.X,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = Attribute.Center.Y,StringFormat={}{0:F0}}"/>
                                                   <Run Text=","/>
                                </TextBlock>
                                <TextBlock Text="{Binding Path=Attribute.Radius}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="DrawingVisualCircleWordTemplate" DataType="{x:Type draw:DVCircleText}" >
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock HorizontalAlignment="Center">
                                                    <Run Text="{Binding Path = Attribute.Center.X,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                                    <Run Text="{Binding Path = Attribute.Center.Y,StringFormat={}{0:F0}}"/>
                                                    <Run Text=","/>
                                </TextBlock>
                                <TextBlock  Text="{Binding Path=Attribute.Text}" />
                                <TextBlock  Text=",  " />
                                <TextBlock  Text="{Binding Path=Attribute.Radius}" />
                            </StackPanel>
                        </DataTemplate>

                        <DataTemplate x:Key="DrawingVisualRectangleTemplate"  DataType="{x:Type draw:DVRectangle}">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock>
                                            <Run Text="{Binding Attribute.Rect.X,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Y,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Width,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Height,StringFormat={}{0:F0}}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="DrawingVisualRectangleWordTemplate"  DataType="{x:Type draw:DVRectangleText}">
                            <StackPanel  Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static properties:Resources.Delete}" Click="MenuItem_DrawingVisual_Delete"  Tag="{Binding .}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <TextBlock>
                                            <Run Text="{Binding Attribute.Rect.X,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Y,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Width,StringFormat={}{0:F0}}"/>
                                            <Run Text="{Binding Attribute.Rect.Height,StringFormat={}{0:F0}}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemBaseStyle}">
                            <Setter Property="ContextMenu" Value="{StaticResource ContextMenuItem}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView >
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource  GridViewColumnHeaderBase}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                    <EventSetter Event="Click" Handler="GridViewColumnSort"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn Header="显示">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type draw:IDrawingVisualDatum}">
                                        <CheckBox IsChecked="{Binding BaseAttribute.IsShow}" Tag="{Binding .}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="序号">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type draw:IDrawingVisual}">
                                        <TextBlock Text="{Binding BaseAttribute.Id}" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="合规模板ID" Width="120">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type draw:IDrawingVisual}">
                                        <ComboBox Initialized="ComboBoxValidateCIE_Initialized" Width="100" SelectedValue="{Binding BaseAttribute.Tag}"  SelectedValuePath="Id" DisplayMemberPath="Key" Margin="2,0" Style="{StaticResource ComboBox.Small}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Header="值"  Width="300">
                                <GridViewColumn.CellTemplateSelector>
                                    <converter:DrawCanvasTemplateSelector  DrawingVisualRectangleTemplate ="{StaticResource DrawingVisualRectangleTemplate}" DrawingVisualCircleWordTemplate="{StaticResource DrawingVisualCircleWordTemplate}"  DrawingVisualRectangleWordTemplate="{StaticResource DrawingVisualRectangleWordTemplate}" DrawingVisualCircleTemplate ="{StaticResource DrawingVisualCircleTemplate}" />
                                </GridViewColumn.CellTemplateSelector>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>

            </Grid>
        </Grid>

        <Grid x:Name="WaitControl" Grid.Row="0" Grid.ColumnSpan="2" Panel.ZIndex="9" Visibility="Collapsed">
            <Grid   Background="Black"  Opacity="0.3"/>
            <Border   Background="#F9F9F9"  Height="250" Width="250"  CornerRadius="10">
                <Border Background="#F3F3F3" BorderBrush="#EAEAEA" BorderThickness="1" CornerRadius="5" Margin="5">
                    <Grid>
                        <base:ProgressRing  BorderBrush="Red" Margin="30" />
                        <TextBlock x:Name="WaitControlText" Text="数据生成中" HorizontalAlignment="Center" FontSize="16"/>
                        <ProgressBar x:Name="WaitControlProgressBar" Visibility="Collapsed" BorderThickness="0"  Maximum="100" Minimum="0"  Margin="5" VerticalAlignment="Bottom" />
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </Grid>
</Window>
